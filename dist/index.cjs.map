{"version":3,"sources":["../src/index.ts","../src/react/ChatEnabled.tsx","../src/react/FloatingWindow.tsx","../src/react/DefaultChatbot.tsx","../src/react/chatStorage.ts"],"sourcesContent":["export { ChatEnabled } from \"./react/ChatEnabled\";\nexport type { ChatEnabledProps } from \"./react/ChatEnabled\";\nexport { FloatingWindow } from \"./react/FloatingWindow\";\nexport type { FloatingWindowProps, FloatingWindowCorner } from \"./react/FloatingWindow\";\nexport type { FloatingWindowPosition } from \"./react/FloatingWindow\";\nexport { DefaultChatbot } from \"./react/DefaultChatbot\";\nexport type { DefaultChatbotProps, ChatAgent } from \"./react/DefaultChatbot\";\nexport { clearConversation, clearAllConversations, getConversationStorageKey, CHAT_STORAGE_PREFIX } from \"./react/chatStorage\";\n\n\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport { FloatingWindow, FloatingWindowProps } from \"./FloatingWindow\";\n\nexport type ChatEnabledTrigger = \"hover\" | \"focus\" | \"always\" | \"manual\";\n\nexport type ChatEnabledProps = {\n  children: React.ReactNode;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  label?: string;\n  position?: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\n  offset?: number;\n  icon?: React.ReactNode;\n  className?: string; // container className\n  containerStyle?: React.CSSProperties;\n  buttonClassName?: string;\n  buttonStyle?: React.CSSProperties;\n  buttonSize?: number; // px, default 36\n  zIndex?: number; // default 10\n  disabled?: boolean;\n  trigger?: ChatEnabledTrigger; // default 'hover'\n  open?: boolean; // used when trigger is 'manual'\n  onOpenChange?: (open: boolean) => void; // notifies visibility changes\n  renderButton?: (\n    props: React.ButtonHTMLAttributes<HTMLButtonElement> & {\n      visible: boolean;\n      ref: React.Ref<HTMLButtonElement>;\n    }\n  ) => React.ReactNode;\n  // Optional built-in floating window support\n  openWindowOnClick?: boolean; // default false\n  windowProps?: (Omit<FloatingWindowProps, \"children\"> & { sendComponentImageAsContext?: boolean });\n  windowContent?: React.ReactNode; // custom content; if absent, shows nothing\n};\n\nexport const ChatEnabled = React.forwardRef<HTMLButtonElement, ChatEnabledProps>(\n  (\n    {\n      children,\n      onClick,\n      label = \"Open chat\",\n      position = \"top-right\",\n      offset = 8,\n      icon,\n      className,\n      containerStyle,\n      buttonClassName,\n      buttonStyle,\n      buttonSize = 36,\n      zIndex = 10,\n      disabled = false,\n      trigger,\n      open,\n      onOpenChange,\n      renderButton,\n      openWindowOnClick = false,\n      windowProps,\n      windowContent,\n    },\n    ref\n  ) => {\n    const [isHoveredOrFocused, setIsHoveredOrFocused] = useState(false);\n    const [isWindowOpen, setIsWindowOpen] = useState(false);\n    const internalButtonRef = useRef<HTMLButtonElement | null>(null);\n    const containerRef = useRef<HTMLDivElement | null>(null);\n    const captureRef = useRef<HTMLDivElement | null>(null);\n    const [capturedImage, setCapturedImage] = useState<string | null>(null);\n\n    const resolvedTrigger: ChatEnabledTrigger = trigger ?? \"hover\";\n\n    const positionStyle = useMemo<React.CSSProperties>(() => {\n      const base: React.CSSProperties = { position: \"absolute\" };\n      const offsetPx = `${offset}px`;\n      switch (position) {\n        case \"top-left\":\n          return { ...base, top: offsetPx, left: offsetPx };\n        case \"top-right\":\n          return { ...base, top: offsetPx, right: offsetPx };\n        case \"bottom-left\":\n          return { ...base, bottom: offsetPx, left: offsetPx };\n        case \"bottom-right\":\n        default:\n          return { ...base, bottom: offsetPx, right: offsetPx };\n      }\n    }, [position, offset]);\n\n    const computedVisible = (() => {\n      if (resolvedTrigger === \"always\") return true;\n      if (resolvedTrigger === \"manual\") return Boolean(open);\n      // hover or focus: we use the same internal state\n      return isHoveredOrFocused;\n    })();\n\n    const notifyOpenChange = (next: boolean) => {\n      if (onOpenChange) onOpenChange(next);\n    };\n\n    const containerEventHandlers = {\n      onMouseEnter: resolvedTrigger === \"hover\" ? () => { setIsHoveredOrFocused(true); notifyOpenChange(true); } : undefined,\n      onMouseLeave: resolvedTrigger === \"hover\" ? () => { setIsHoveredOrFocused(false); notifyOpenChange(false); } : undefined,\n      onFocus: resolvedTrigger === \"focus\" ? () => { setIsHoveredOrFocused(true); notifyOpenChange(true); } : undefined,\n      onBlur: resolvedTrigger === \"focus\" ? () => { setIsHoveredOrFocused(false); notifyOpenChange(false); } : undefined,\n    } as const;\n    const sendImageFlag = Boolean((windowProps as any)?.sendComponentImageAsContext);\n\n    useEffect(() => {\n      const doCapture = async () => {\n        if (!sendImageFlag) return;\n        const target = captureRef.current;\n        if (!target) return;\n        try {\n          // Wait a tick to ensure layout has settled\n          await new Promise((r) => requestAnimationFrame(() => setTimeout(r, 50)));\n          const canvas = await html2canvas(target, {\n            useCORS: true,\n            backgroundColor: null,\n            scale: Math.min(2, Math.max(1, Math.ceil((target as HTMLElement).offsetWidth / 280))),\n          });\n          const dataUrl = canvas.toDataURL(\"image/png\", 0.92);\n          setCapturedImage(dataUrl);\n        } catch {\n          // ignore capture errors\n        }\n      };\n      if (isWindowOpen) {\n        void doCapture();\n      }\n    }, [isWindowOpen, sendImageFlag]);\n\n\n    const setMergedRef = (el: HTMLButtonElement | null) => {\n      internalButtonRef.current = el;\n      if (typeof ref === \"function\") {\n        ref(el);\n      } else if (ref && typeof ref === \"object\") {\n        (ref as React.MutableRefObject<HTMLButtonElement | null>).current = el;\n      }\n    };\n\n    const buttonProps: React.ButtonHTMLAttributes<HTMLButtonElement> & { ref: typeof ref; visible: boolean } = {\n      type: \"button\",\n      \"aria-label\": label,\n      onClick: (e) => {\n        onClick?.(e);\n        if (!disabled && openWindowOnClick) setIsWindowOpen(true);\n      },\n      className: buttonClassName,\n      disabled,\n      style: {\n        ...positionStyle,\n        zIndex,\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: 9999,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"1px solid rgba(0,0,0,0.08)\",\n        background: disabled ? \"#f3f4f6\" : \"white\",\n        color: disabled ? \"#9ca3af\" : undefined,\n        boxShadow:\n          \"0 2px 6px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.06)\",\n        cursor: disabled ? \"not-allowed\" : \"pointer\",\n        transition: \"opacity 120ms ease, transform 120ms ease\",\n        opacity: computedVisible ? 1 : 0,\n        transform: computedVisible ? \"scale(1)\" : \"scale(0.95)\",\n        pointerEvents: computedVisible ? \"auto\" : \"none\",\n        ...buttonStyle,\n      },\n      tabIndex: computedVisible ? 0 : -1,\n      \"aria-hidden\": computedVisible ? undefined : true,\n      ref: setMergedRef,\n      visible: computedVisible,\n    };\n\n    return (\n      <div\n        className={className}\n        style={{ position: \"relative\", display: \"inline-block\", ...containerStyle }}\n        {...containerEventHandlers}\n        ref={containerRef}\n      >\n        <div ref={captureRef} style={{ display: \"inline-block\" }}>\n          {children}\n        </div>\n        {renderButton ? (\n          renderButton(buttonProps)\n        ) : (\n          <button {...buttonProps}>\n            {icon ?? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={Math.max(12, Math.floor(buttonSize * 0.5))}\n                height={Math.max(12, Math.floor(buttonSize * 0.5))}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M21 15a4 4 0 0 1-4 4H7l-4 4V7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4z\" />\n              </svg>\n            )}\n          </button>\n        )}\n        {openWindowOnClick && isWindowOpen && windowContent && (\n          <FloatingWindow\n            {...(windowProps as FloatingWindowProps)}\n            onClose={() => {\n              windowProps?.onClose?.();\n              setIsWindowOpen(false);\n              setCapturedImage(null);\n            }}\n            anchorRect={\n              (windowProps as FloatingWindowProps | undefined)?.anchorRect ??\n              (internalButtonRef.current\n                ? internalButtonRef.current.getBoundingClientRect()\n                : null)\n            }\n          >\n            {(() => {\n              if (sendImageFlag) {\n                if (!capturedImage) {\n                  return (\n                    <div style={{ padding: 12, color: \"#6b7280\", fontSize: 14 }}>\n                      Loading...\n                    </div>\n                  );\n                }\n                if (React.isValidElement(windowContent)) {\n                  const prev = (windowContent.props as any)?.contextImages as string[] | undefined;\n                  const merged = [...(prev ?? []), capturedImage];\n                  try {\n                    return React.cloneElement(windowContent as any, { contextImages: merged });\n                  } catch {\n                    return windowContent;\n                  }\n                }\n              }\n              return windowContent;\n            })()}\n          </FloatingWindow>\n        )}\n      </div>\n    );\n  }\n);\n\nChatEnabled.displayName = \"ChatEnabled\";\n\n// For convenience, also export a lower-cased alias for named import\n// Note: in JSX you must still use <ChatEnabled />, not <chatEnabled />\nexport const chatEnabled = ChatEnabled;\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\n\nexport type FloatingWindowCorner = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\nexport type FloatingWindowPosition = FloatingWindowCorner | \"auto\";\n\nexport type FloatingWindowProps = {\n  children: React.ReactNode;\n  title?: React.ReactNode;\n  onClose?: () => void;\n  position?: FloatingWindowPosition;\n  width?: number; // px\n  height?: number; // px\n  minWidth?: number;\n  minHeight?: number;\n  offset?: number; // px from edges\n  zIndex?: number;\n  className?: string;\n  style?: React.CSSProperties;\n  headerClassName?: string;\n  bodyClassName?: string;\n  closeButtonAriaLabel?: string;\n  closeOnEscape?: boolean;\n  draggable?: boolean;\n  // When position is 'auto', anchorRect helps place the window near the trigger button\n  anchorRect?: { top: number; left: number; right: number; bottom: number; width: number; height: number } | null;\n};\n\nexport const FloatingWindow: React.FC<FloatingWindowProps> = ({\n  children,\n  title,\n  onClose,\n  position = \"bottom-right\",\n  width = 360,\n  height = 480,\n  minWidth = 280,\n  minHeight = 240,\n  offset = 16,\n  zIndex = 1000,\n  className,\n  style,\n  headerClassName,\n  bodyClassName,\n  closeButtonAriaLabel = \"Close\",\n  closeOnEscape = true,\n  draggable = true,\n  anchorRect,\n}) => {\n  const [isCloseHovered, setIsCloseHovered] = useState(false);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const [dragging, setDragging] = useState(false);\n  const dragStart = useRef<{ x: number; y: number; top: number; left: number } | null>(null);\n  const [dragTopLeft, setDragTopLeft] = useState<{ top: number; left: number } | null>(null);\n  useEffect(() => {\n    if (!closeOnEscape) return;\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        onClose?.();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [closeOnEscape, onClose]);\n\n  const edgeStyle: React.CSSProperties = (() => {\n    const o = `${offset}px`;\n    switch (position) {\n      case \"top-left\":\n        return { top: o, left: o };\n      case \"top-right\":\n        return { top: o, right: o };\n      case \"bottom-left\":\n        return { bottom: o, left: o };\n      case \"bottom-right\":\n      default:\n        return { bottom: o, right: o };\n    }\n  })();\n\n  const autoTopLeft: { top: number; left: number } | null = (() => {\n    if (position !== \"auto\" || !anchorRect) return null;\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    const gap = offset;\n    const preferBottom = anchorRect.top < vh / 2;\n    const preferRight = anchorRect.left > vw / 2;\n    const verticalOrder = preferBottom ? [\"bottom\", \"top\"] : [\"top\", \"bottom\"] as const;\n    const horizontalOrder = preferRight ? [\"right\", \"left\"] : [\"left\", \"right\"] as const;\n\n    const candidates: Array<\"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"> = [\n      `${verticalOrder[0]}-${horizontalOrder[0]}` as any,\n      `${verticalOrder[0]}-${horizontalOrder[1]}` as any,\n      `${verticalOrder[1]}-${horizontalOrder[0]}` as any,\n      `${verticalOrder[1]}-${horizontalOrder[1]}` as any,\n    ];\n\n    for (const c of candidates) {\n      let top = 0;\n      let left = 0;\n      if (c === \"bottom-right\") {\n        top = anchorRect.bottom + gap;\n        left = anchorRect.right - width;\n      } else if (c === \"bottom-left\") {\n        top = anchorRect.bottom + gap;\n        left = anchorRect.left;\n      } else if (c === \"top-right\") {\n        top = anchorRect.top - height - gap;\n        left = anchorRect.right - width;\n      } else {\n        top = anchorRect.top - height - gap;\n        left = anchorRect.left;\n      }\n      const fits = top >= 0 && left >= 0 && top + height <= vh && left + width <= vw;\n      if (fits) return { top, left };\n    }\n    // Fallback: clamp bottom-right relative to anchor\n    let top = Math.min(Math.max(anchorRect.bottom + gap, 0), vh - height);\n    let left = Math.min(Math.max(anchorRect.right - width, 0), vw - width);\n    return { top, left };\n  })();\n\n  const handlePointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n    if (!draggable) return;\n    const el = containerRef.current;\n    if (!el) return;\n    const rect = el.getBoundingClientRect();\n    dragStart.current = { x: e.clientX, y: e.clientY, top: rect.top, left: rect.left };\n    setDragTopLeft({ top: rect.top, left: rect.left });\n    setDragging(true);\n    const handleMove = (ev: PointerEvent) => {\n      if (!dragStart.current) return;\n      const dx = ev.clientX - dragStart.current.x;\n      const dy = ev.clientY - dragStart.current.y;\n      setDragTopLeft({ top: dragStart.current.top + dy, left: dragStart.current.left + dx });\n    };\n    const handleUp = () => {\n      setDragging(false);\n      dragStart.current = null;\n      window.removeEventListener(\"pointermove\", handleMove);\n      window.removeEventListener(\"pointerup\", handleUp);\n    };\n    window.addEventListener(\"pointermove\", handleMove);\n    window.addEventListener(\"pointerup\", handleUp, { once: true });\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      role=\"dialog\"\n      aria-modal=\"false\"\n      className={className}\n      style={{\n        position: \"fixed\",\n        ...(dragTopLeft\n          ? { top: dragTopLeft.top, left: dragTopLeft.left }\n          : autoTopLeft\n          ? { top: autoTopLeft.top, left: autoTopLeft.left }\n          : edgeStyle),\n        width,\n        height,\n        minWidth,\n        minHeight,\n        zIndex,\n        background: \"#ffffff\",\n        border: \"1px solid rgba(0,0,0,0.06)\",\n        borderRadius: 12,\n        boxShadow:\n          \"0 10px 30px rgba(0,0,0,0.15), 0 4px 12px rgba(0,0,0,0.08)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        userSelect: dragging ? \"none\" : undefined,\n        ...style,\n      }}\n    >\n      <div\n        className={headerClassName}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: \"10px 12px\",\n          borderBottom: \"1px solid rgba(0,0,0,0.06)\",\n          background: \"#f9fafb\",\n          cursor: draggable ? \"move\" : undefined,\n        }}\n        onPointerDown={handlePointerDown}\n      >\n        <div style={{ fontWeight: 600, color: \"#111827\" }}>{title}</div>\n        <button\n          type=\"button\"\n          onClick={onClose}\n          aria-label={closeButtonAriaLabel}\n          onMouseEnter={() => setIsCloseHovered(true)}\n          onMouseLeave={() => setIsCloseHovered(false)}\n          style={{\n            width: 28,\n            height: 28,\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: 8,\n            border: \"1px solid rgba(0,0,0,0.08)\",\n            background: \"white\",\n            cursor: \"pointer\",\n            color: isCloseHovered ? \"#ef4444\" : undefined,\n            transition: \"color 120ms ease\",\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n          </svg>\n        </button>\n      </div>\n      <div\n        className={bodyClassName}\n        style={{ flex: 1, overflow: \"auto\", background: \"#ffffff\" }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\n\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { CHAT_STORAGE_PREFIX } from \"./chatStorage\";\n\ntype UiMessage = {\n  id: string;\n  role: \"user\" | \"assistant\";\n  text?: string;\n  images?: string[]; // data URLs for previews\n};\n\ntype UserContentPart =\n  | { type: \"text\"; text: string }\n  | { type: \"image_url\"; image_url: { url: string } };\n\ntype OpenAIMessage =\n  | { role: \"system\"; content: string }\n  | { role: \"assistant\"; content: string }\n  | { role: \"user\"; content: string | UserContentPart[] };\n\nexport type ChatAgent = {\n  id: string;\n  name: string;\n  systemPrompt?: string;\n  context?: unknown;\n  icon?: React.ReactNode;\n};\n\nexport type DefaultChatbotProps = {\n  model?: string; // OpenAI model id with vision support\n  placeholderApiKey?: string; // optional explicit key (prefer server proxy in production)\n  systemPrompt?: string;\n  welcome?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  conversationId?: string | null; // when null/undefined, a new id is generated per mount\n  context?: unknown; // arbitrary JSON-like object passed to the model as system context\n  contextImages?: string[]; // optional images to prepend as context (data URLs or https URLs)\n  inputPlaceholder?: string; // placeholder text for the input box\n  inputValue?: string; // externally controlled input value\n  agents?: ChatAgent[]; // optional list of agents a user can pick from\n  activeAgentId?: string; // controlled active agent\n  onAgentChange?: (agentId: string) => void; // notify on agent change\n};\n\nconst OPENAI_API_URL = \"https://api.openai.com/v1/chat/completions\";\n\nasync function fileToDataUrl(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nexport const DefaultChatbot: React.FC<DefaultChatbotProps> = ({\n  model = \"gpt-4o-mini\",\n  placeholderApiKey,\n  systemPrompt = \"You are a helpful assistant.\",\n  welcome = \"Hi! How can I help you today?\",\n  className,\n  style,\n  conversationId,\n  context,\n  contextImages,\n  inputPlaceholder,\n  inputValue,\n  agents,\n  activeAgentId,\n  onAgentChange,\n}) => {\n  const resolveApiKey = (explicit?: string): string | null => {\n    if (explicit && explicit !== \"REPLACE_WITH_YOUR_OPENAI_API_KEY\") return explicit;\n    try {\n      const g = (globalThis as any) || {};\n      if (typeof g.AI_HUD_OPENAI_API_KEY === \"string\" && g.AI_HUD_OPENAI_API_KEY) return g.AI_HUD_OPENAI_API_KEY;\n      if (typeof g.__AI_HUD_OPENAI_API_KEY__ === \"string\" && g.__AI_HUD_OPENAI_API_KEY__) return g.__AI_HUD_OPENAI_API_KEY__;\n    } catch {}\n    try {\n      const p = (globalThis as any).process;\n      if (p && p.env && typeof p.env.AI_HUD_OPENAI_API_KEY === \"string\") {\n        return p.env.AI_HUD_OPENAI_API_KEY as string;\n      }\n    } catch {}\n    return null;\n  };\n\n  const apiKey = resolveApiKey(placeholderApiKey);\n  const generatedIdRef = useRef<string | null>(null);\n  if (!conversationId && !generatedIdRef.current) {\n    const gen = ((): string => {\n      try {\n        if (typeof crypto !== \"undefined\" && (crypto as any).randomUUID) return (crypto as any).randomUUID();\n      } catch {}\n      return `conv_${Date.now().toString(36)}_${Math.random().toString(36).slice(2, 8)}`;\n    })();\n    generatedIdRef.current = gen;\n  }\n  const effectiveConversationId = conversationId ?? generatedIdRef.current!;\n  const storageKey = `${CHAT_STORAGE_PREFIX}${effectiveConversationId}`;\n  const [messages, setMessages] = useState<UiMessage[]>(() => {\n    try {\n      const raw = typeof window !== \"undefined\" ? window.localStorage.getItem(storageKey) : null;\n      if (raw) {\n        const parsed = JSON.parse(raw) as UiMessage[];\n        if (Array.isArray(parsed)) return parsed;\n      }\n    } catch {}\n    return [{ id: \"welcome\", role: \"assistant\", text: welcome }];\n  });\n  const [input, setInput] = useState<string>(() =>\n    typeof inputValue === \"string\" ? inputValue : \"\"\n  );\n  const [pendingImages, setPendingImages] = useState<string[]>([]);\n  const [isSending, setIsSending] = useState(false);\n  const endRef = useRef<HTMLDivElement | null>(null);\n  const [uncontrolledAgentId, setUncontrolledAgentId] = useState<string | undefined>(() => agents?.[0]?.id);\n\n  const effectiveAgentId = (activeAgentId ?? uncontrolledAgentId) as string | undefined;\n  const effectiveAgent = agents?.find(a => a.id === effectiveAgentId);\n\n  const scrollToEnd = useCallback(() => {\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, []);\n\n  const handlePickImages = async (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const files = Array.from(e.target.files || []);\n    if (files.length === 0) return;\n    const urls = await Promise.all(files.map(fileToDataUrl));\n    setPendingImages((prev) => [...prev, ...urls]);\n    e.target.value = \"\";\n  };\n\n  const removePendingImage = (idx: number) => {\n    setPendingImages((prev) => prev.filter((_, i) => i !== idx));\n  };\n\n  const buildOpenAIMessages = useCallback(\n    (\n      uiMessages: UiMessage[],\n      nextUser?: { text: string; images: string[] }\n    ): OpenAIMessage[] => {\n      const result: OpenAIMessage[] = [];\n      if (effectiveAgent?.systemPrompt) {\n        result.push({ role: \"system\", content: effectiveAgent.systemPrompt });\n      }\n      if (systemPrompt) {\n        result.push({ role: \"system\", content: systemPrompt });\n      }\n      if (typeof context !== \"undefined\") {\n        let serialized = \"\";\n        try {\n          serialized = JSON.stringify(context);\n        } catch {\n          serialized = String(context);\n        }\n        result.push({ role: \"system\", content: `Context: ${serialized}` });\n      }\n      if (typeof effectiveAgent?.context !== \"undefined\") {\n        try {\n          result.push({ role: \"system\", content: `AgentContext: ${JSON.stringify(effectiveAgent.context)}` });\n        } catch {\n          result.push({ role: \"system\", content: `AgentContext: ${String(effectiveAgent.context)}` });\n        }\n      }\n      if (Array.isArray(contextImages) && contextImages.length > 0) {\n        // Ensure data URLs are converted to https if needed (OpenAI requires hosted URLs in some models)\n        // Many vision models now accept data URLs; keep as-is but filter invalid ones.\n        const valid = contextImages.filter((u) => typeof u === \"string\" && (u.startsWith(\"data:image/\") || u.startsWith(\"http\")));\n        if (valid.length > 0) {\n          const parts: UserContentPart[] = [\n            { type: \"text\", text: \"Context images\" },\n            ...valid.map<UserContentPart>((url) => ({ type: \"image_url\", image_url: { url } })),\n          ];\n          result.push({ role: \"user\", content: parts });\n        }\n      }\n      for (const m of uiMessages) {\n        if (m.role === \"assistant\") {\n          result.push({ role: \"assistant\", content: m.text || \"\" });\n        } else {\n          if ((m.images?.length || 0) > 0) {\n            const parts: UserContentPart[] = [\n              { type: \"text\", text: m.text || \"\" },\n              ...m.images!.map<UserContentPart>((url) => ({ type: \"image_url\", image_url: { url } })),\n            ];\n            result.push({ role: \"user\", content: parts });\n          } else {\n            result.push({ role: \"user\", content: m.text || \"\" });\n          }\n        }\n      }\n      if (nextUser) {\n        if (nextUser.images.length > 0) {\n          const parts: UserContentPart[] = [\n            { type: \"text\", text: nextUser.text },\n            ...nextUser.images.map<UserContentPart>((url) => ({ type: \"image_url\", image_url: { url } })),\n          ];\n          result.push({ role: \"user\", content: parts });\n        } else {\n          result.push({ role: \"user\", content: nextUser.text });\n        }\n      }\n      console.log(\"result\", result)\n      return result;\n    },\n    [systemPrompt, context, effectiveAgent?.systemPrompt, effectiveAgent?.context]\n  );\n\n  const send = useCallback(async () => {\n    const text = input.trim();\n    if (!text && pendingImages.length === 0) return;\n    const userMsg: UiMessage = {\n      id: String(Date.now()),\n      role: \"user\",\n      text: text || undefined,\n      images: pendingImages.length ? pendingImages : undefined,\n    };\n    setMessages((prev) => [...prev, userMsg]);\n    setInput(\"\");\n    setPendingImages([]);\n    setIsSending(true);\n\n    try {\n      const openaiMessages = buildOpenAIMessages(messages, {\n        text: userMsg.text || \"\",\n        images: userMsg.images || [],\n      });\n\n      const res = await fetch(OPENAI_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...(apiKey ? { Authorization: `Bearer ${apiKey}` } : {}),\n        },\n        body: JSON.stringify({\n          model,\n          messages: openaiMessages,\n          temperature: 0.7,\n        }),\n      });\n      if (!res.ok) throw new Error(`OpenAI error: ${res.status}`);\n      const data = await res.json();\n      const content = data?.choices?.[0]?.message?.content ?? \"\";\n      const assistant: UiMessage = {\n        id: String(Date.now() + 1),\n        role: \"assistant\",\n        text: typeof content === \"string\" ? content : String(content),\n      };\n      setMessages((prev) => [...prev, assistant]);\n      setTimeout(scrollToEnd, 0);\n    } catch (err: any) {\n      const assistant: UiMessage = {\n        id: String(Date.now() + 1),\n        role: \"assistant\",\n        text: `Error: ${err?.message || \"Failed to contact OpenAI\"}`,\n      };\n      setMessages((prev) => [...prev, assistant]);\n    } finally {\n      setIsSending(false);\n    }\n  }, [buildOpenAIMessages, input, messages, pendingImages, placeholderApiKey, model, scrollToEnd]);\n\n  const canSend = useMemo(() => {\n    return (input.trim().length > 0 || pendingImages.length > 0) && !isSending;\n  }, [input, pendingImages.length, isSending]);\n\n  // Persist conversation per conversationId\n  useEffect(() => {\n    try {\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(storageKey, JSON.stringify(messages));\n      }\n    } catch {}\n  }, [messages, storageKey]);\n\n  // If no explicit conversationId was provided (auto-generated),\n  // clear storage on unmount to avoid accumulating transient threads.\n  useEffect(() => {\n    return () => {\n      if (!conversationId) {\n        try {\n          if (typeof window !== \"undefined\") {\n            window.localStorage.removeItem(storageKey);\n          }\n        } catch {}\n      }\n    };\n  }, [conversationId, storageKey]);\n\n  return (\n    <div className={className} style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\", ...style }}>\n      <div style={{ flex: 1, overflow: \"auto\", padding: 12, background: \"#ffffff\" }}>\n        {Array.isArray(agents) && agents.length > 0 && (\n          <div style={{ display: \"flex\", gap: 8, marginBottom: 8, flexWrap: \"wrap\" }}>\n            {agents.map((agent) => {\n              const selected = agent.id === effectiveAgentId;\n              return (\n                <button\n                  key={agent.id}\n                  type=\"button\"\n                  onClick={() => {\n                    if (activeAgentId && onAgentChange) onAgentChange(agent.id);\n                    if (!activeAgentId) setUncontrolledAgentId(agent.id);\n                  }}\n                  style={{\n                    display: \"inline-flex\",\n                    alignItems: \"center\",\n                    gap: 6,\n                    padding: \"6px 10px\",\n                    borderRadius: 8,\n                    border: selected ? \"1px solid #111827\" : \"1px solid #e5e7eb\",\n                    background: selected ? \"#111827\" : \"white\",\n                    color: selected ? \"white\" : \"#111827\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  {agent.icon}\n                  <span>{agent.name}</span>\n                </button>\n              );\n            })}\n          </div>\n        )}\n        {messages.map((m) => (\n          <div key={m.id} style={{ marginBottom: 10, display: \"flex\", justifyContent: m.role === \"user\" ? \"flex-end\" : \"flex-start\" }}>\n            <div\n              style={{\n                maxWidth: \"80%\",\n                padding: \"8px 10px\",\n                borderRadius: 10,\n                border: \"1px solid rgba(0,0,0,0.06)\",\n                background: m.role === \"user\" ? \"#111827\" : \"#f3f4f6\",\n                color: m.role === \"user\" ? \"#ffffff\" : \"#111827\",\n                whiteSpace: \"pre-wrap\",\n                wordBreak: \"break-word\",\n              }}\n            >\n              {m.text}\n              {m.images && m.images.length > 0 && (\n                <div style={{ display: \"flex\", gap: 8, marginTop: 8, flexWrap: \"wrap\" }}>\n                  {m.images.map((url, i) => (\n                    <img key={i} src={url} alt=\"upload\" style={{ width: 96, height: 72, objectFit: \"cover\", borderRadius: 8, border: \"1px solid rgba(0,0,0,0.06)\" }} />\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n        <div ref={endRef} />\n      </div>\n      <div style={{ padding: 12, borderTop: \"1px solid rgba(0,0,0,0.06)\", background: \"#fafafa\" }}>\n        <div style={{ display: \"flex\", gap: 8, alignItems: \"center\" }}>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            onChange={handlePickImages}\n            style={{ display: \"none\" }}\n            id=\"ai-hud-chatbot-file\"\n          />\n          <label htmlFor=\"ai-hud-chatbot-file\">\n            <span\n              style={{\n                display: \"inline-flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: 36,\n                height: 36,\n                border: \"1px solid rgba(0,0,0,0.08)\",\n                borderRadius: 8,\n                background: \"white\",\n                cursor: \"pointer\",\n              }}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M18.5 12.5l-5 5-3-3-5 5\" />\n                <path d=\"M20 7a4 4 0 0 0-8 0v10a4 4 0 0 0 8 0Z\" />\n              </svg>\n            </span>\n          </label>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={inputPlaceholder ?? \"Type a message...\"}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                if (canSend) void send();\n              }\n            }}\n            style={{\n              flex: 1,\n              height: 36,\n              border: \"1px solid rgba(0,0,0,0.15)\",\n              borderRadius: 8,\n              padding: \"0 10px\",\n            }}\n          />\n          <button\n            type=\"button\"\n            disabled={!canSend}\n            onClick={() => void send()}\n            style={{\n              height: 36,\n              padding: \"0 12px\",\n              borderRadius: 8,\n              border: \"1px solid rgba(0,0,0,0.08)\",\n              background: canSend ? \"#111827\" : \"#e5e7eb\",\n              color: canSend ? \"#ffffff\" : \"#9ca3af\",\n              cursor: canSend ? \"pointer\" : \"not-allowed\",\n            }}\n          >\n            Send\n          </button>\n        </div>\n        {pendingImages.length > 0 && (\n          <div style={{ display: \"flex\", gap: 8, marginTop: 8, flexWrap: \"wrap\" }}>\n            {pendingImages.map((url, i) => (\n              <div key={i} style={{ position: \"relative\" }}>\n                <img src={url} alt=\"selected\" style={{ width: 64, height: 48, objectFit: \"cover\", borderRadius: 6, border: \"1px solid rgba(0,0,0,0.06)\" }} />\n                <button\n                  type=\"button\"\n                  onClick={() => removePendingImage(i)}\n                  aria-label=\"Remove image\"\n                  style={{\n                    position: \"absolute\",\n                    top: -6,\n                    right: -6,\n                    width: 20,\n                    height: 20,\n                    borderRadius: 9999,\n                    border: \"1px solid rgba(0,0,0,0.08)\",\n                    background: \"white\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\n","export const CHAT_STORAGE_PREFIX = \"ai-hud:default-chatbot:history:\";\n\nexport function getConversationStorageKey(conversationId: string): string {\n  return `${CHAT_STORAGE_PREFIX}${conversationId}`;\n}\n\nexport function clearConversation(conversationId: string): void {\n  try {\n    if (typeof window !== \"undefined\") {\n      window.localStorage.removeItem(getConversationStorageKey(conversationId));\n    }\n  } catch {}\n}\n\nexport function clearAllConversations(): void {\n  try {\n    if (typeof window === \"undefined\") return;\n    const keys: string[] = [];\n    for (let i = 0; i < window.localStorage.length; i++) {\n      const key = window.localStorage.key(i);\n      if (key && key.startsWith(CHAT_STORAGE_PREFIX)) keys.push(key);\n    }\n    keys.forEach((k) => window.localStorage.removeItem(k));\n  } catch {}\n}\n\n\n"],"mappings":"0kBAAA,IAAAA,GAAA,GAAAC,GAAAD,GAAA,yBAAAE,EAAA,gBAAAC,EAAA,mBAAAC,GAAA,mBAAAC,EAAA,0BAAAC,GAAA,sBAAAC,GAAA,8BAAAC,KAAA,eAAAC,GAAAT,ICAA,IAAAU,EAA4D,uBAC5DC,GAAwB,6BCDxB,IAAAC,EAAmD,iBA2L3CC,EAAA,6BAhKKC,EAAgD,CAAC,CAC5D,SAAAC,EACA,MAAAC,EACA,QAAAC,EACA,SAAAC,EAAW,eACX,MAAAC,EAAQ,IACR,OAAAC,EAAS,IACT,SAAAC,EAAW,IACX,UAAAC,EAAY,IACZ,OAAAC,EAAS,GACT,OAAAC,EAAS,IACT,UAAAC,EACA,MAAAC,EACA,gBAAAC,EACA,cAAAC,EACA,qBAAAC,EAAuB,QACvB,cAAAC,EAAgB,GAChB,UAAAC,EAAY,GACZ,WAAAC,CACF,IAAM,CACJ,GAAM,CAACC,EAAgBC,CAAiB,KAAI,YAAS,EAAK,EACpDC,KAAe,UAA8B,IAAI,EACjD,CAACC,EAAUC,CAAW,KAAI,YAAS,EAAK,EACxCC,KAAY,UAAmE,IAAI,EACnF,CAACC,EAAaC,CAAc,KAAI,YAA+C,IAAI,KACzF,aAAU,IAAM,CACd,GAAI,CAACV,EAAe,OACpB,IAAMW,EAAiBC,GAAqB,CACtCA,EAAE,MAAQ,UACZzB,IAAU,CAEd,EACA,cAAO,iBAAiB,UAAWwB,CAAa,EACzC,IAAM,OAAO,oBAAoB,UAAWA,CAAa,CAClE,EAAG,CAACX,EAAeb,CAAO,CAAC,EAE3B,IAAM0B,GAAkC,IAAM,CAC5C,IAAMC,EAAI,GAAGrB,CAAM,KACnB,OAAQL,EAAU,CAChB,IAAK,WACH,MAAO,CAAE,IAAK0B,EAAG,KAAMA,CAAE,EAC3B,IAAK,YACH,MAAO,CAAE,IAAKA,EAAG,MAAOA,CAAE,EAC5B,IAAK,cACH,MAAO,CAAE,OAAQA,EAAG,KAAMA,CAAE,EAC9B,IAAK,eACL,QACE,MAAO,CAAE,OAAQA,EAAG,MAAOA,CAAE,CACjC,CACF,GAAG,EAEGC,GAAqD,IAAM,CAC/D,GAAI3B,IAAa,QAAU,CAACc,EAAY,OAAO,KAC/C,IAAMc,EAAK,OAAO,WACZC,EAAK,OAAO,YACZC,EAAMzB,EACN0B,EAAejB,EAAW,IAAMe,EAAK,EACrCG,EAAclB,EAAW,KAAOc,EAAK,EACrCK,EAAgBF,EAAe,CAAC,SAAU,KAAK,EAAI,CAAC,MAAO,QAAQ,EACnEG,EAAkBF,EAAc,CAAC,QAAS,MAAM,EAAI,CAAC,OAAQ,OAAO,EAEpEG,EAA+E,CACnF,GAAGF,EAAc,CAAC,CAAC,IAAIC,EAAgB,CAAC,CAAC,GACzC,GAAGD,EAAc,CAAC,CAAC,IAAIC,EAAgB,CAAC,CAAC,GACzC,GAAGD,EAAc,CAAC,CAAC,IAAIC,EAAgB,CAAC,CAAC,GACzC,GAAGD,EAAc,CAAC,CAAC,IAAIC,EAAgB,CAAC,CAAC,EAC3C,EAEA,QAAWE,KAAKD,EAAY,CAC1B,IAAIE,EAAM,EACNC,EAAO,EAeX,GAdIF,IAAM,gBACRC,EAAMvB,EAAW,OAASgB,EAC1BQ,EAAOxB,EAAW,MAAQb,GACjBmC,IAAM,eACfC,EAAMvB,EAAW,OAASgB,EAC1BQ,EAAOxB,EAAW,MACTsB,IAAM,aACfC,EAAMvB,EAAW,IAAMZ,EAAS4B,EAChCQ,EAAOxB,EAAW,MAAQb,IAE1BoC,EAAMvB,EAAW,IAAMZ,EAAS4B,EAChCQ,EAAOxB,EAAW,MAEPuB,GAAO,GAAKC,GAAQ,GAAKD,EAAMnC,GAAU2B,GAAMS,EAAOrC,GAAS2B,EAClE,MAAO,CAAE,IAAAS,EAAK,KAAAC,CAAK,CAC/B,CAEA,IAAID,EAAM,KAAK,IAAI,KAAK,IAAIvB,EAAW,OAASgB,EAAK,CAAC,EAAGD,EAAK3B,CAAM,EAChEoC,EAAO,KAAK,IAAI,KAAK,IAAIxB,EAAW,MAAQb,EAAO,CAAC,EAAG2B,EAAK3B,CAAK,EACrE,MAAO,CAAE,IAAAoC,EAAK,KAAAC,CAAK,CACrB,GAAG,EAEGC,EAAqBf,GAA0C,CACnE,GAAI,CAACX,EAAW,OAChB,IAAM2B,EAAKvB,EAAa,QACxB,GAAI,CAACuB,EAAI,OACT,IAAMC,EAAOD,EAAG,sBAAsB,EACtCpB,EAAU,QAAU,CAAE,EAAGI,EAAE,QAAS,EAAGA,EAAE,QAAS,IAAKiB,EAAK,IAAK,KAAMA,EAAK,IAAK,EACjFnB,EAAe,CAAE,IAAKmB,EAAK,IAAK,KAAMA,EAAK,IAAK,CAAC,EACjDtB,EAAY,EAAI,EAChB,IAAMuB,EAAcC,GAAqB,CACvC,GAAI,CAACvB,EAAU,QAAS,OACxB,IAAMwB,EAAKD,EAAG,QAAUvB,EAAU,QAAQ,EACpCyB,EAAKF,EAAG,QAAUvB,EAAU,QAAQ,EAC1CE,EAAe,CAAE,IAAKF,EAAU,QAAQ,IAAMyB,EAAI,KAAMzB,EAAU,QAAQ,KAAOwB,CAAG,CAAC,CACvF,EACME,EAAW,IAAM,CACrB3B,EAAY,EAAK,EACjBC,EAAU,QAAU,KACpB,OAAO,oBAAoB,cAAesB,CAAU,EACpD,OAAO,oBAAoB,YAAaI,CAAQ,CAClD,EACA,OAAO,iBAAiB,cAAeJ,CAAU,EACjD,OAAO,iBAAiB,YAAaI,EAAU,CAAE,KAAM,EAAK,CAAC,CAC/D,EAEA,SACE,QAAC,OACC,IAAK7B,EACL,KAAK,SACL,aAAW,QACX,UAAWV,EACX,MAAO,CACL,SAAU,QACV,GAAIc,EACA,CAAE,IAAKA,EAAY,IAAK,KAAMA,EAAY,IAAK,EAC/CM,EACA,CAAE,IAAKA,EAAY,IAAK,KAAMA,EAAY,IAAK,EAC/CF,EACJ,MAAAxB,EACA,OAAAC,EACA,SAAAC,EACA,UAAAC,EACA,OAAAE,EACA,WAAY,UACZ,OAAQ,6BACR,aAAc,GACd,UACE,4DACF,QAAS,OACT,cAAe,SACf,SAAU,SACV,WAAYY,EAAW,OAAS,OAChC,GAAGV,CACL,EAEA,qBAAC,OACC,UAAWC,EACX,MAAO,CACL,QAAS,OACT,WAAY,SACZ,eAAgB,gBAChB,QAAS,YACT,aAAc,6BACd,WAAY,UACZ,OAAQI,EAAY,OAAS,MAC/B,EACA,cAAe0B,EAEf,oBAAC,OAAI,MAAO,CAAE,WAAY,IAAK,MAAO,SAAU,EAAI,SAAAzC,EAAM,KAC1D,OAAC,UACC,KAAK,SACL,QAASC,EACT,aAAYY,EACZ,aAAc,IAAMK,EAAkB,EAAI,EAC1C,aAAc,IAAMA,EAAkB,EAAK,EAC3C,MAAO,CACL,MAAO,GACP,OAAQ,GACR,QAAS,cACT,WAAY,SACZ,eAAgB,SAChB,aAAc,EACd,OAAQ,6BACR,WAAY,QACZ,OAAQ,UACR,MAAOD,EAAiB,UAAY,OACpC,WAAY,kBACd,EAEA,oBAAC,OACC,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,OAAO,eACP,YAAY,IACZ,cAAc,QACd,eAAe,QAEf,oBAAC,QAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,KACpC,OAAC,QAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GACtC,EACF,GACF,KACA,OAAC,OACC,UAAWL,EACX,MAAO,CAAE,KAAM,EAAG,SAAU,OAAQ,WAAY,SAAU,EAEzD,SAAAb,EACH,GACF,CAEJ,EDxDM,IAAAkD,EAAA,6BA7IOC,EAAc,EAAAC,QAAM,WAC/B,CACE,CACE,SAAAC,EACA,QAAAC,EACA,MAAAC,EAAQ,YACR,SAAAC,EAAW,YACX,OAAAC,EAAS,EACT,KAAAC,EACA,UAAAC,EACA,eAAAC,EACA,gBAAAC,EACA,YAAAC,EACA,WAAAC,EAAa,GACb,OAAAC,EAAS,GACT,SAAAC,EAAW,GACX,QAAAC,EACA,KAAAC,EACA,aAAAC,EACA,aAAAC,EACA,kBAAAC,EAAoB,GACpB,YAAAC,EACA,cAAAC,CACF,EACAC,IACG,CACH,GAAM,CAACC,EAAoBC,CAAqB,KAAI,YAAS,EAAK,EAC5D,CAACC,EAAcC,CAAe,KAAI,YAAS,EAAK,EAChDC,KAAoB,UAAiC,IAAI,EACzDC,KAAe,UAA8B,IAAI,EACjDC,KAAa,UAA8B,IAAI,EAC/C,CAACC,EAAeC,CAAgB,KAAI,YAAwB,IAAI,EAEhEC,EAAsCjB,GAAW,QAEjDkB,KAAgB,WAA6B,IAAM,CACvD,IAAMC,EAA4B,CAAE,SAAU,UAAW,EACnDC,EAAW,GAAG7B,CAAM,KAC1B,OAAQD,EAAU,CAChB,IAAK,WACH,MAAO,CAAE,GAAG6B,EAAM,IAAKC,EAAU,KAAMA,CAAS,EAClD,IAAK,YACH,MAAO,CAAE,GAAGD,EAAM,IAAKC,EAAU,MAAOA,CAAS,EACnD,IAAK,cACH,MAAO,CAAE,GAAGD,EAAM,OAAQC,EAAU,KAAMA,CAAS,EACrD,IAAK,eACL,QACE,MAAO,CAAE,GAAGD,EAAM,OAAQC,EAAU,MAAOA,CAAS,CACxD,CACF,EAAG,CAAC9B,EAAUC,CAAM,CAAC,EAEf8B,EACAJ,IAAoB,SAAiB,GACrCA,IAAoB,SAAiB,EAAQhB,EAE1CO,EAGHc,EAAoBC,GAAkB,CACtCrB,GAAcA,EAAaqB,CAAI,CACrC,EAEMC,EAAyB,CAC7B,aAAcP,IAAoB,QAAU,IAAM,CAAER,EAAsB,EAAI,EAAGa,EAAiB,EAAI,CAAG,EAAI,OAC7G,aAAcL,IAAoB,QAAU,IAAM,CAAER,EAAsB,EAAK,EAAGa,EAAiB,EAAK,CAAG,EAAI,OAC/G,QAASL,IAAoB,QAAU,IAAM,CAAER,EAAsB,EAAI,EAAGa,EAAiB,EAAI,CAAG,EAAI,OACxG,OAAQL,IAAoB,QAAU,IAAM,CAAER,EAAsB,EAAK,EAAGa,EAAiB,EAAK,CAAG,EAAI,MAC3G,EACMG,EAAgB,EAASpB,GAAqB,+BAEpD,aAAU,IAAM,CAmBVK,IAlBc,SAAY,CAC5B,GAAI,CAACe,EAAe,OACpB,IAAMC,EAASZ,EAAW,QAC1B,GAAKY,EACL,GAAI,CAEF,MAAM,IAAI,QAASC,GAAM,sBAAsB,IAAM,WAAWA,EAAG,EAAE,CAAC,CAAC,EAMvE,IAAMC,GALS,QAAM,GAAAC,SAAYH,EAAQ,CACvC,QAAS,GACT,gBAAiB,KACjB,MAAO,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAAK,KAAMA,EAAuB,YAAc,GAAG,CAAC,CAAC,CACtF,CAAC,GACsB,UAAU,YAAa,GAAI,EAClDV,EAAiBY,CAAO,CAC1B,MAAQ,CAER,CACF,GAEiB,CAEnB,EAAG,CAAClB,EAAce,CAAa,CAAC,EAGhC,IAAMK,EAAgBC,GAAiC,CACrDnB,EAAkB,QAAUmB,EACxB,OAAOxB,GAAQ,WACjBA,EAAIwB,CAAE,EACGxB,GAAO,OAAOA,GAAQ,WAC9BA,EAAyD,QAAUwB,EAExE,EAEMC,EAAqG,CACzG,KAAM,SACN,aAAc3C,EACd,QAAU4C,GAAM,CACd7C,IAAU6C,CAAC,EACP,CAAClC,GAAYK,GAAmBO,EAAgB,EAAI,CAC1D,EACA,UAAWhB,EACX,SAAAI,EACA,MAAO,CACL,GAAGmB,EACH,OAAApB,EACA,MAAOD,EACP,OAAQA,EACR,aAAc,KACd,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,OAAQ,6BACR,WAAYE,EAAW,UAAY,QACnC,MAAOA,EAAW,UAAY,OAC9B,UACE,wDACF,OAAQA,EAAW,cAAgB,UACnC,WAAY,2CACZ,QAASsB,EAAkB,EAAI,EAC/B,UAAWA,EAAkB,WAAa,cAC1C,cAAeA,EAAkB,OAAS,OAC1C,GAAGzB,CACL,EACA,SAAUyB,EAAkB,EAAI,GAChC,cAAeA,EAAkB,OAAY,GAC7C,IAAKS,EACL,QAAST,CACX,EAEA,SACE,QAAC,OACC,UAAW5B,EACX,MAAO,CAAE,SAAU,WAAY,QAAS,eAAgB,GAAGC,CAAe,EACzE,GAAG8B,EACJ,IAAKX,EAEL,oBAAC,OAAI,IAAKC,EAAY,MAAO,CAAE,QAAS,cAAe,EACpD,SAAA3B,EACH,EACCgB,EACCA,EAAa6B,CAAW,KAExB,OAAC,UAAQ,GAAGA,EACT,SAAAxC,MACC,OAAC,OACC,MAAM,6BACN,MAAO,KAAK,IAAI,GAAI,KAAK,MAAMK,EAAa,EAAG,CAAC,EAChD,OAAQ,KAAK,IAAI,GAAI,KAAK,MAAMA,EAAa,EAAG,CAAC,EACjD,QAAQ,YACR,KAAK,OACL,OAAO,eACP,YAAY,IACZ,cAAc,QACd,eAAe,QAEf,mBAAC,QAAK,EAAE,gEAAgE,EAC1E,EAEJ,EAEDO,GAAqBM,GAAgBJ,MACpC,OAAC4B,EAAA,CACE,GAAI7B,EACL,QAAS,IAAM,CACbA,GAAa,UAAU,EACvBM,EAAgB,EAAK,EACrBK,EAAiB,IAAI,CACvB,EACA,WACGX,GAAiD,aACjDO,EAAkB,QACfA,EAAkB,QAAQ,sBAAsB,EAChD,MAGJ,cAAM,CACN,GAAIa,EAAe,CACjB,GAAI,CAACV,EACH,SACE,OAAC,OAAI,MAAO,CAAE,QAAS,GAAI,MAAO,UAAW,SAAU,EAAG,EAAG,sBAE7D,EAGJ,GAAI,EAAA7B,QAAM,eAAeoB,CAAa,EAAG,CAEvC,IAAM6B,EAAS,CAAC,GADF7B,EAAc,OAAe,eACf,CAAC,EAAIS,CAAa,EAC9C,GAAI,CACF,OAAO,EAAA7B,QAAM,aAAaoB,EAAsB,CAAE,cAAe6B,CAAO,CAAC,CAC3E,MAAQ,CACN,OAAO7B,CACT,CACF,CACF,CACA,OAAOA,CACT,GAAG,EACL,GAEJ,CAEJ,CACF,EAEArB,EAAY,YAAc,cEzP1B,IAAAmD,EAAyE,iBCAlE,IAAMC,EAAsB,kCAE5B,SAASC,GAA0BC,EAAgC,CACxE,MAAO,GAAGF,CAAmB,GAAGE,CAAc,EAChD,CAEO,SAASC,GAAkBD,EAA8B,CAC9D,GAAI,CACE,OAAO,OAAW,KACpB,OAAO,aAAa,WAAWD,GAA0BC,CAAc,CAAC,CAE5E,MAAQ,CAAC,CACX,CAEO,SAASE,IAA8B,CAC5C,GAAI,CACF,GAAI,OAAO,OAAW,IAAa,OACnC,IAAMC,EAAiB,CAAC,EACxB,QAASC,EAAI,EAAGA,EAAI,OAAO,aAAa,OAAQA,IAAK,CACnD,IAAMC,EAAM,OAAO,aAAa,IAAID,CAAC,EACjCC,GAAOA,EAAI,WAAWP,CAAmB,GAAGK,EAAK,KAAKE,CAAG,CAC/D,CACAF,EAAK,QAASG,GAAM,OAAO,aAAa,WAAWA,CAAC,CAAC,CACvD,MAAQ,CAAC,CACX,CDoRgB,IAAAC,EAAA,6BAhQVC,GAAiB,6CAEvB,eAAeC,GAAcC,EAA6B,CACxD,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAMC,EAAS,IAAI,WACnBA,EAAO,OAAS,IAAMF,EAAQE,EAAO,MAAgB,EACrDA,EAAO,QAAUD,EACjBC,EAAO,cAAcH,CAAI,CAC3B,CAAC,CACH,CAEO,IAAMI,GAAgD,CAAC,CAC5D,MAAAC,EAAQ,cACR,kBAAAC,EACA,aAAAC,EAAe,+BACf,QAAAC,EAAU,gCACV,UAAAC,EACA,MAAAC,EACA,eAAAC,EACA,QAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,WAAAC,EACA,OAAAC,EACA,cAAAC,EACA,cAAAC,CACF,IAAM,CAiBJ,IAAMC,GAhBiBC,GAAqC,CAC1D,GAAIA,GAAYA,IAAa,mCAAoC,OAAOA,EACxE,GAAI,CACF,IAAMC,EAAK,YAAsB,CAAC,EAClC,GAAI,OAAOA,EAAE,uBAA0B,UAAYA,EAAE,sBAAuB,OAAOA,EAAE,sBACrF,GAAI,OAAOA,EAAE,2BAA8B,UAAYA,EAAE,0BAA2B,OAAOA,EAAE,yBAC/F,MAAQ,CAAC,CACT,GAAI,CACF,IAAMC,EAAK,WAAmB,QAC9B,GAAIA,GAAKA,EAAE,KAAO,OAAOA,EAAE,IAAI,uBAA0B,SACvD,OAAOA,EAAE,IAAI,qBAEjB,MAAQ,CAAC,CACT,OAAO,IACT,GAE6BhB,CAAiB,EACxCiB,KAAiB,UAAsB,IAAI,EACjD,GAAI,CAACZ,GAAkB,CAACY,EAAe,QAAS,CAC9C,IAAMC,GAAO,IAAc,CACzB,GAAI,CACF,GAAI,OAAO,OAAW,KAAgB,OAAe,WAAY,OAAQ,OAAe,WAAW,CACrG,MAAQ,CAAC,CACT,MAAO,QAAQ,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,CAAC,EAClF,GAAG,EACHD,EAAe,QAAUC,CAC3B,CACA,IAAMC,EAA0Bd,GAAkBY,EAAe,QAC3DG,EAAa,GAAGC,CAAmB,GAAGF,CAAuB,GAC7D,CAACG,EAAUC,CAAW,KAAI,YAAsB,IAAM,CAC1D,GAAI,CACF,IAAMC,EAAM,OAAO,OAAW,IAAc,OAAO,aAAa,QAAQJ,CAAU,EAAI,KACtF,GAAII,EAAK,CACP,IAAMC,EAAS,KAAK,MAAMD,CAAG,EAC7B,GAAI,MAAM,QAAQC,CAAM,EAAG,OAAOA,CACpC,CACF,MAAQ,CAAC,CACT,MAAO,CAAC,CAAE,GAAI,UAAW,KAAM,YAAa,KAAMvB,CAAQ,CAAC,CAC7D,CAAC,EACK,CAACwB,EAAOC,CAAQ,KAAI,YAAiB,IACzC,OAAOlB,GAAe,SAAWA,EAAa,EAChD,EACM,CAACmB,EAAeC,CAAgB,KAAI,YAAmB,CAAC,CAAC,EACzD,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAK,EAC1CC,KAAS,UAA8B,IAAI,EAC3C,CAACC,EAAqBC,CAAsB,KAAI,YAA6B,IAAMxB,IAAS,CAAC,GAAG,EAAE,EAElGyB,EAAoBxB,GAAiBsB,EACrCG,EAAiB1B,GAAQ,KAAK2B,GAAKA,EAAE,KAAOF,CAAgB,EAE5DG,KAAc,eAAY,IAAM,CACpCN,EAAO,SAAS,eAAe,CAAE,SAAU,QAAS,CAAC,CACvD,EAAG,CAAC,CAAC,EAECO,EAAmB,MACvBC,GACG,CACH,IAAMC,EAAQ,MAAM,KAAKD,EAAE,OAAO,OAAS,CAAC,CAAC,EAC7C,GAAIC,EAAM,SAAW,EAAG,OACxB,IAAMC,EAAO,MAAM,QAAQ,IAAID,EAAM,IAAIhD,EAAa,CAAC,EACvDoC,EAAkBc,GAAS,CAAC,GAAGA,EAAM,GAAGD,CAAI,CAAC,EAC7CF,EAAE,OAAO,MAAQ,EACnB,EAEMI,EAAsBC,GAAgB,CAC1ChB,EAAkBc,GAASA,EAAK,OAAO,CAACG,EAAGC,IAAMA,IAAMF,CAAG,CAAC,CAC7D,EAEMG,KAAsB,eAC1B,CACEC,EACAC,IACoB,CACpB,IAAMC,EAA0B,CAAC,EAOjC,GANIf,GAAgB,cAClBe,EAAO,KAAK,CAAE,KAAM,SAAU,QAASf,EAAe,YAAa,CAAC,EAElEnC,GACFkD,EAAO,KAAK,CAAE,KAAM,SAAU,QAASlD,CAAa,CAAC,EAEnD,OAAOK,EAAY,IAAa,CAClC,IAAI8C,EAAa,GACjB,GAAI,CACFA,EAAa,KAAK,UAAU9C,CAAO,CACrC,MAAQ,CACN8C,EAAa,OAAO9C,CAAO,CAC7B,CACA6C,EAAO,KAAK,CAAE,KAAM,SAAU,QAAS,YAAYC,CAAU,EAAG,CAAC,CACnE,CACA,GAAI,OAAOhB,GAAgB,QAAY,IACrC,GAAI,CACFe,EAAO,KAAK,CAAE,KAAM,SAAU,QAAS,iBAAiB,KAAK,UAAUf,EAAe,OAAO,CAAC,EAAG,CAAC,CACpG,MAAQ,CACNe,EAAO,KAAK,CAAE,KAAM,SAAU,QAAS,iBAAiB,OAAOf,EAAe,OAAO,CAAC,EAAG,CAAC,CAC5F,CAEF,GAAI,MAAM,QAAQ7B,CAAa,GAAKA,EAAc,OAAS,EAAG,CAG5D,IAAM8C,EAAQ9C,EAAc,OAAQ+C,GAAM,OAAOA,GAAM,WAAaA,EAAE,WAAW,aAAa,GAAKA,EAAE,WAAW,MAAM,EAAE,EACxH,GAAID,EAAM,OAAS,EAAG,CACpB,IAAME,EAA2B,CAC/B,CAAE,KAAM,OAAQ,KAAM,gBAAiB,EACvC,GAAGF,EAAM,IAAsBG,IAAS,CAAE,KAAM,YAAa,UAAW,CAAE,IAAAA,CAAI,CAAE,EAAE,CACpF,EACAL,EAAO,KAAK,CAAE,KAAM,OAAQ,QAASI,CAAM,CAAC,CAC9C,CACF,CACA,QAAWE,KAAKR,EACd,GAAIQ,EAAE,OAAS,YACbN,EAAO,KAAK,CAAE,KAAM,YAAa,QAASM,EAAE,MAAQ,EAAG,CAAC,WAEnDA,EAAE,QAAQ,QAAU,GAAK,EAAG,CAC/B,IAAMF,EAA2B,CAC/B,CAAE,KAAM,OAAQ,KAAME,EAAE,MAAQ,EAAG,EACnC,GAAGA,EAAE,OAAQ,IAAsBD,IAAS,CAAE,KAAM,YAAa,UAAW,CAAE,IAAAA,CAAI,CAAE,EAAE,CACxF,EACAL,EAAO,KAAK,CAAE,KAAM,OAAQ,QAASI,CAAM,CAAC,CAC9C,MACEJ,EAAO,KAAK,CAAE,KAAM,OAAQ,QAASM,EAAE,MAAQ,EAAG,CAAC,EAIzD,GAAIP,EACF,GAAIA,EAAS,OAAO,OAAS,EAAG,CAC9B,IAAMK,EAA2B,CAC/B,CAAE,KAAM,OAAQ,KAAML,EAAS,IAAK,EACpC,GAAGA,EAAS,OAAO,IAAsBM,IAAS,CAAE,KAAM,YAAa,UAAW,CAAE,IAAAA,CAAI,CAAE,EAAE,CAC9F,EACAL,EAAO,KAAK,CAAE,KAAM,OAAQ,QAASI,CAAM,CAAC,CAC9C,MACEJ,EAAO,KAAK,CAAE,KAAM,OAAQ,QAASD,EAAS,IAAK,CAAC,EAGxD,eAAQ,IAAI,SAAUC,CAAM,EACrBA,CACT,EACA,CAAClD,EAAcK,EAAS8B,GAAgB,aAAcA,GAAgB,OAAO,CAC/E,EAEMsB,KAAO,eAAY,SAAY,CACnC,IAAMC,EAAOjC,EAAM,KAAK,EACxB,GAAI,CAACiC,GAAQ/B,EAAc,SAAW,EAAG,OACzC,IAAMgC,EAAqB,CACzB,GAAI,OAAO,KAAK,IAAI,CAAC,EACrB,KAAM,OACN,KAAMD,GAAQ,OACd,OAAQ/B,EAAc,OAASA,EAAgB,MACjD,EACAL,EAAaoB,GAAS,CAAC,GAAGA,EAAMiB,CAAO,CAAC,EACxCjC,EAAS,EAAE,EACXE,EAAiB,CAAC,CAAC,EACnBE,EAAa,EAAI,EAEjB,GAAI,CACF,IAAM8B,EAAiBb,EAAoB1B,EAAU,CACnD,KAAMsC,EAAQ,MAAQ,GACtB,OAAQA,EAAQ,QAAU,CAAC,CAC7B,CAAC,EAEKE,EAAM,MAAM,MAAMtE,GAAgB,CACtC,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,GAAIqB,EAAS,CAAE,cAAe,UAAUA,CAAM,EAAG,EAAI,CAAC,CACxD,EACA,KAAM,KAAK,UAAU,CACnB,MAAAd,EACA,SAAU8D,EACV,YAAa,EACf,CAAC,CACH,CAAC,EACD,GAAI,CAACC,EAAI,GAAI,MAAM,IAAI,MAAM,iBAAiBA,EAAI,MAAM,EAAE,EAE1D,IAAMC,GADO,MAAMD,EAAI,KAAK,IACN,UAAU,CAAC,GAAG,SAAS,SAAW,GAClDE,GAAuB,CAC3B,GAAI,OAAO,KAAK,IAAI,EAAI,CAAC,EACzB,KAAM,YACN,KAAM,OAAOD,GAAY,SAAWA,EAAU,OAAOA,CAAO,CAC9D,EACAxC,EAAaoB,IAAS,CAAC,GAAGA,GAAMqB,EAAS,CAAC,EAC1C,WAAW1B,EAAa,CAAC,CAC3B,OAAS2B,EAAU,CACjB,IAAMD,EAAuB,CAC3B,GAAI,OAAO,KAAK,IAAI,EAAI,CAAC,EACzB,KAAM,YACN,KAAM,UAAUC,GAAK,SAAW,0BAA0B,EAC5D,EACA1C,EAAaoB,GAAS,CAAC,GAAGA,EAAMqB,CAAS,CAAC,CAC5C,QAAE,CACAjC,EAAa,EAAK,CACpB,CACF,EAAG,CAACiB,EAAqBtB,EAAOJ,EAAUM,EAAe5B,EAAmBD,EAAOuC,CAAW,CAAC,EAEzF4B,KAAU,WAAQ,KACdxC,EAAM,KAAK,EAAE,OAAS,GAAKE,EAAc,OAAS,IAAM,CAACE,EAChE,CAACJ,EAAOE,EAAc,OAAQE,CAAS,CAAC,EAG3C,sBAAU,IAAM,CACd,GAAI,CACE,OAAO,OAAW,KACpB,OAAO,aAAa,QAAQV,EAAY,KAAK,UAAUE,CAAQ,CAAC,CAEpE,MAAQ,CAAC,CACX,EAAG,CAACA,EAAUF,CAAU,CAAC,KAIzB,aAAU,IACD,IAAM,CACX,GAAI,CAACf,EACH,GAAI,CACE,OAAO,OAAW,KACpB,OAAO,aAAa,WAAWe,CAAU,CAE7C,MAAQ,CAAC,CAEb,EACC,CAACf,EAAgBe,CAAU,CAAC,KAG7B,QAAC,OAAI,UAAWjB,EAAW,MAAO,CAAE,QAAS,OAAQ,cAAe,SAAU,OAAQ,OAAQ,GAAGC,CAAM,EACrG,qBAAC,OAAI,MAAO,CAAE,KAAM,EAAG,SAAU,OAAQ,QAAS,GAAI,WAAY,SAAU,EACzE,gBAAM,QAAQM,CAAM,GAAKA,EAAO,OAAS,MACxC,OAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,EAAG,aAAc,EAAG,SAAU,MAAO,EACtE,SAAAA,EAAO,IAAKyD,GAAU,CACrB,IAAMC,EAAWD,EAAM,KAAOhC,EAC9B,SACE,QAAC,UAEC,KAAK,SACL,QAAS,IAAM,CACTxB,GAAiBC,GAAeA,EAAcuD,EAAM,EAAE,EACrDxD,GAAeuB,EAAuBiC,EAAM,EAAE,CACrD,EACA,MAAO,CACL,QAAS,cACT,WAAY,SACZ,IAAK,EACL,QAAS,WACT,aAAc,EACd,OAAQC,EAAW,oBAAsB,oBACzC,WAAYA,EAAW,UAAY,QACnC,MAAOA,EAAW,QAAU,UAC5B,OAAQ,SACV,EAEC,UAAAD,EAAM,QACP,OAAC,QAAM,SAAAA,EAAM,KAAK,IAnBbA,EAAM,EAoBb,CAEJ,CAAC,EACH,EAED7C,EAAS,IAAKmC,MACb,OAAC,OAAe,MAAO,CAAE,aAAc,GAAI,QAAS,OAAQ,eAAgBA,EAAE,OAAS,OAAS,WAAa,YAAa,EACxH,oBAAC,OACC,MAAO,CACL,SAAU,MACV,QAAS,WACT,aAAc,GACd,OAAQ,6BACR,WAAYA,EAAE,OAAS,OAAS,UAAY,UAC5C,MAAOA,EAAE,OAAS,OAAS,UAAY,UACvC,WAAY,WACZ,UAAW,YACb,EAEC,UAAAA,EAAE,KACFA,EAAE,QAAUA,EAAE,OAAO,OAAS,MAC7B,OAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,EAAG,UAAW,EAAG,SAAU,MAAO,EACnE,SAAAA,EAAE,OAAO,IAAI,CAACD,EAAKT,OAClB,OAAC,OAAY,IAAKS,EAAK,IAAI,SAAS,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,UAAW,QAAS,aAAc,EAAG,OAAQ,4BAA6B,GAApIT,CAAuI,CAClJ,EACH,GAEJ,GArBQU,EAAE,EAsBZ,CACD,KACD,OAAC,OAAI,IAAKzB,EAAQ,GACpB,KACA,QAAC,OAAI,MAAO,CAAE,QAAS,GAAI,UAAW,6BAA8B,WAAY,SAAU,EACxF,qBAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,EAAG,WAAY,QAAS,EAC1D,oBAAC,SACC,KAAK,OACL,OAAO,UACP,SAAQ,GACR,SAAUO,EACV,MAAO,CAAE,QAAS,MAAO,EACzB,GAAG,sBACL,KACA,OAAC,SAAM,QAAQ,sBACb,mBAAC,QACC,MAAO,CACL,QAAS,cACT,WAAY,SACZ,eAAgB,SAChB,MAAO,GACP,OAAQ,GACR,OAAQ,6BACR,aAAc,EACd,WAAY,QACZ,OAAQ,SACV,EAEA,oBAAC,OAAI,MAAM,6BAA6B,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,QACxK,oBAAC,QAAK,EAAE,0BAA0B,KAClC,OAAC,QAAK,EAAE,wCAAwC,GAClD,EACF,EACF,KACA,OAAC,SACC,MAAOb,EACP,SAAWc,GAAMb,EAASa,EAAE,OAAO,KAAK,EACxC,YAAahC,GAAoB,oBACjC,UAAYgC,GAAM,CACZA,EAAE,MAAQ,SAAW,CAACA,EAAE,WAC1BA,EAAE,eAAe,EACb0B,GAAcR,EAAK,EAE3B,EACA,MAAO,CACL,KAAM,EACN,OAAQ,GACR,OAAQ,6BACR,aAAc,EACd,QAAS,QACX,EACF,KACA,OAAC,UACC,KAAK,SACL,SAAU,CAACQ,EACX,QAAS,IAAM,KAAKR,EAAK,EACzB,MAAO,CACL,OAAQ,GACR,QAAS,SACT,aAAc,EACd,OAAQ,6BACR,WAAYQ,EAAU,UAAY,UAClC,MAAOA,EAAU,UAAY,UAC7B,OAAQA,EAAU,UAAY,aAChC,EACD,gBAED,GACF,EACCtC,EAAc,OAAS,MACtB,OAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,EAAG,UAAW,EAAG,SAAU,MAAO,EACnE,SAAAA,EAAc,IAAI,CAAC4B,EAAKT,OACvB,QAAC,OAAY,MAAO,CAAE,SAAU,UAAW,EACzC,oBAAC,OAAI,IAAKS,EAAK,IAAI,WAAW,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,UAAW,QAAS,aAAc,EAAG,OAAQ,4BAA6B,EAAG,KAC3I,OAAC,UACC,KAAK,SACL,QAAS,IAAMZ,EAAmBG,CAAC,EACnC,aAAW,eACX,MAAO,CACL,SAAU,WACV,IAAK,GACL,MAAO,GACP,MAAO,GACP,OAAQ,GACR,aAAc,KACd,OAAQ,6BACR,WAAY,QACZ,OAAQ,SACV,EACD,gBAED,IAnBQA,CAoBV,CACD,EACH,GAEJ,GACF,CAEJ","names":["index_exports","__export","CHAT_STORAGE_PREFIX","ChatEnabled","DefaultChatbot","FloatingWindow","clearAllConversations","clearConversation","getConversationStorageKey","__toCommonJS","import_react","import_html2canvas","import_react","import_jsx_runtime","FloatingWindow","children","title","onClose","position","width","height","minWidth","minHeight","offset","zIndex","className","style","headerClassName","bodyClassName","closeButtonAriaLabel","closeOnEscape","draggable","anchorRect","isCloseHovered","setIsCloseHovered","containerRef","dragging","setDragging","dragStart","dragTopLeft","setDragTopLeft","handleKeyDown","e","edgeStyle","o","autoTopLeft","vw","vh","gap","preferBottom","preferRight","verticalOrder","horizontalOrder","candidates","c","top","left","handlePointerDown","el","rect","handleMove","ev","dx","dy","handleUp","import_jsx_runtime","ChatEnabled","React","children","onClick","label","position","offset","icon","className","containerStyle","buttonClassName","buttonStyle","buttonSize","zIndex","disabled","trigger","open","onOpenChange","renderButton","openWindowOnClick","windowProps","windowContent","ref","isHoveredOrFocused","setIsHoveredOrFocused","isWindowOpen","setIsWindowOpen","internalButtonRef","containerRef","captureRef","capturedImage","setCapturedImage","resolvedTrigger","positionStyle","base","offsetPx","computedVisible","notifyOpenChange","next","containerEventHandlers","sendImageFlag","target","r","dataUrl","html2canvas","setMergedRef","el","buttonProps","e","FloatingWindow","merged","import_react","CHAT_STORAGE_PREFIX","getConversationStorageKey","conversationId","clearConversation","clearAllConversations","keys","i","key","k","import_jsx_runtime","OPENAI_API_URL","fileToDataUrl","file","resolve","reject","reader","DefaultChatbot","model","placeholderApiKey","systemPrompt","welcome","className","style","conversationId","context","contextImages","inputPlaceholder","inputValue","agents","activeAgentId","onAgentChange","apiKey","explicit","g","p","generatedIdRef","gen","effectiveConversationId","storageKey","CHAT_STORAGE_PREFIX","messages","setMessages","raw","parsed","input","setInput","pendingImages","setPendingImages","isSending","setIsSending","endRef","uncontrolledAgentId","setUncontrolledAgentId","effectiveAgentId","effectiveAgent","a","scrollToEnd","handlePickImages","e","files","urls","prev","removePendingImage","idx","_","i","buildOpenAIMessages","uiMessages","nextUser","result","serialized","valid","u","parts","url","m","send","text","userMsg","openaiMessages","res","content","assistant","err","canSend","agent","selected"]}