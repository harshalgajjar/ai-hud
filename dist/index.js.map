{"version":3,"sources":["../src/react/ChatEnabled.tsx","../src/react/FloatingWindow.tsx","../src/react/DefaultChatbot.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { FloatingWindow, FloatingWindowProps } from \"./FloatingWindow\";\nimport { DefaultChatbot } from \"./DefaultChatbot\";\n\nexport type ChatEnabledTrigger = \"hover\" | \"focus\" | \"always\" | \"manual\";\n\nexport type ChatEnabledProps = {\n  children: React.ReactNode;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  label?: string;\n  position?: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\n  offset?: number;\n  icon?: React.ReactNode;\n  className?: string; // container className\n  containerStyle?: React.CSSProperties;\n  buttonClassName?: string;\n  buttonStyle?: React.CSSProperties;\n  buttonSize?: number; // px, default 36\n  zIndex?: number; // default 10\n  disabled?: boolean;\n  trigger?: ChatEnabledTrigger; // default 'hover'\n  open?: boolean; // used when trigger is 'manual'\n  onOpenChange?: (open: boolean) => void; // notifies visibility changes\n  renderButton?: (\n    props: React.ButtonHTMLAttributes<HTMLButtonElement> & {\n      visible: boolean;\n      ref: React.Ref<HTMLButtonElement>;\n    }\n  ) => React.ReactNode;\n  // Optional built-in floating window support\n  openWindowOnClick?: boolean; // default false\n  windowProps?: Omit<FloatingWindowProps, \"children\">;\n  windowContent?: React.ReactNode; // custom content; if absent, shows nothing\n};\n\nexport const ChatEnabled = React.forwardRef<HTMLButtonElement, ChatEnabledProps>(\n  (\n    {\n      children,\n      onClick,\n      label = \"Open chat\",\n      position = \"top-right\",\n      offset = 8,\n      icon,\n      className,\n      containerStyle,\n      buttonClassName,\n      buttonStyle,\n      buttonSize = 36,\n      zIndex = 10,\n      disabled = false,\n      trigger,\n      open,\n      onOpenChange,\n      renderButton,\n      openWindowOnClick = false,\n      windowProps,\n      windowContent,\n    },\n    ref\n  ) => {\n    const [isHoveredOrFocused, setIsHoveredOrFocused] = useState(false);\n    const [isWindowOpen, setIsWindowOpen] = useState(false);\n\n    const resolvedTrigger: ChatEnabledTrigger = trigger ?? \"hover\";\n\n    const positionStyle = useMemo<React.CSSProperties>(() => {\n      const base: React.CSSProperties = { position: \"absolute\" };\n      const offsetPx = `${offset}px`;\n      switch (position) {\n        case \"top-left\":\n          return { ...base, top: offsetPx, left: offsetPx };\n        case \"top-right\":\n          return { ...base, top: offsetPx, right: offsetPx };\n        case \"bottom-left\":\n          return { ...base, bottom: offsetPx, left: offsetPx };\n        case \"bottom-right\":\n        default:\n          return { ...base, bottom: offsetPx, right: offsetPx };\n      }\n    }, [position, offset]);\n\n    const computedVisible = (() => {\n      if (resolvedTrigger === \"always\") return true;\n      if (resolvedTrigger === \"manual\") return Boolean(open);\n      // hover or focus: we use the same internal state\n      return isHoveredOrFocused;\n    })();\n\n    const notifyOpenChange = (next: boolean) => {\n      if (onOpenChange) onOpenChange(next);\n    };\n\n    const containerEventHandlers = {\n      onMouseEnter: resolvedTrigger === \"hover\" ? () => { setIsHoveredOrFocused(true); notifyOpenChange(true); } : undefined,\n      onMouseLeave: resolvedTrigger === \"hover\" ? () => { setIsHoveredOrFocused(false); notifyOpenChange(false); } : undefined,\n      onFocus: resolvedTrigger === \"focus\" ? () => { setIsHoveredOrFocused(true); notifyOpenChange(true); } : undefined,\n      onBlur: resolvedTrigger === \"focus\" ? () => { setIsHoveredOrFocused(false); notifyOpenChange(false); } : undefined,\n    } as const;\n\n    const buttonProps: React.ButtonHTMLAttributes<HTMLButtonElement> & { ref: typeof ref; visible: boolean } = {\n      type: \"button\",\n      \"aria-label\": label,\n      onClick: (e) => {\n        onClick?.(e);\n        if (!disabled && openWindowOnClick) setIsWindowOpen(true);\n      },\n      className: buttonClassName,\n      disabled,\n      style: {\n        ...positionStyle,\n        zIndex,\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: 9999,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"1px solid rgba(0,0,0,0.08)\",\n        background: disabled ? \"#f3f4f6\" : \"white\",\n        color: disabled ? \"#9ca3af\" : undefined,\n        boxShadow:\n          \"0 2px 6px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.06)\",\n        cursor: disabled ? \"not-allowed\" : \"pointer\",\n        transition: \"opacity 120ms ease, transform 120ms ease\",\n        opacity: computedVisible ? 1 : 0,\n        transform: computedVisible ? \"scale(1)\" : \"scale(0.95)\",\n        pointerEvents: computedVisible ? \"auto\" : \"none\",\n        ...buttonStyle,\n      },\n      tabIndex: computedVisible ? 0 : -1,\n      \"aria-hidden\": computedVisible ? undefined : true,\n      ref,\n      visible: computedVisible,\n    };\n\n    return (\n      <div\n        className={className}\n        style={{ position: \"relative\", display: \"inline-block\", ...containerStyle }}\n        {...containerEventHandlers}\n      >\n        {children}\n        {renderButton ? (\n          renderButton(buttonProps)\n        ) : (\n          <button {...buttonProps}>\n            {icon ?? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={Math.max(12, Math.floor(buttonSize * 0.5))}\n                height={Math.max(12, Math.floor(buttonSize * 0.5))}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M21 15a4 4 0 0 1-4 4H7l-4 4V7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4z\" />\n              </svg>\n            )}\n          </button>\n        )}\n        {openWindowOnClick && isWindowOpen && (\n          <FloatingWindow\n            {...(windowProps as FloatingWindowProps)}\n            onClose={() => {\n              windowProps?.onClose?.();\n              setIsWindowOpen(false);\n            }}\n          >\n            {windowContent ?? (\n              <DefaultChatbot />\n            )}\n          </FloatingWindow>\n        )}\n      </div>\n    );\n  }\n);\n\nChatEnabled.displayName = \"ChatEnabled\";\n\n// For convenience, also export a lower-cased alias for named import\n// Note: in JSX you must still use <ChatEnabled />, not <chatEnabled />\nexport const chatEnabled = ChatEnabled;\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\n\nexport type FloatingWindowCorner = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\n\nexport type FloatingWindowProps = {\n  children: React.ReactNode;\n  title?: React.ReactNode;\n  onClose?: () => void;\n  position?: FloatingWindowCorner;\n  width?: number; // px\n  height?: number; // px\n  minWidth?: number;\n  minHeight?: number;\n  offset?: number; // px from edges\n  zIndex?: number;\n  className?: string;\n  style?: React.CSSProperties;\n  headerClassName?: string;\n  bodyClassName?: string;\n  closeButtonAriaLabel?: string;\n  closeOnEscape?: boolean;\n  draggable?: boolean;\n};\n\nexport const FloatingWindow: React.FC<FloatingWindowProps> = ({\n  children,\n  title,\n  onClose,\n  position = \"bottom-right\",\n  width = 360,\n  height = 480,\n  minWidth = 280,\n  minHeight = 240,\n  offset = 16,\n  zIndex = 1000,\n  className,\n  style,\n  headerClassName,\n  bodyClassName,\n  closeButtonAriaLabel = \"Close\",\n  closeOnEscape = true,\n  draggable = true,\n}) => {\n  const [isCloseHovered, setIsCloseHovered] = useState(false);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const [dragging, setDragging] = useState(false);\n  const dragStart = useRef<{ x: number; y: number; top: number; left: number } | null>(null);\n  const [dragTopLeft, setDragTopLeft] = useState<{ top: number; left: number } | null>(null);\n  useEffect(() => {\n    if (!closeOnEscape) return;\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        onClose?.();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [closeOnEscape, onClose]);\n\n  const edgeStyle: React.CSSProperties = (() => {\n    const o = `${offset}px`;\n    switch (position) {\n      case \"top-left\":\n        return { top: o, left: o };\n      case \"top-right\":\n        return { top: o, right: o };\n      case \"bottom-left\":\n        return { bottom: o, left: o };\n      case \"bottom-right\":\n      default:\n        return { bottom: o, right: o };\n    }\n  })();\n\n  const handlePointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n    if (!draggable) return;\n    const el = containerRef.current;\n    if (!el) return;\n    const rect = el.getBoundingClientRect();\n    dragStart.current = { x: e.clientX, y: e.clientY, top: rect.top, left: rect.left };\n    setDragTopLeft({ top: rect.top, left: rect.left });\n    setDragging(true);\n    const handleMove = (ev: PointerEvent) => {\n      if (!dragStart.current) return;\n      const dx = ev.clientX - dragStart.current.x;\n      const dy = ev.clientY - dragStart.current.y;\n      setDragTopLeft({ top: dragStart.current.top + dy, left: dragStart.current.left + dx });\n    };\n    const handleUp = () => {\n      setDragging(false);\n      dragStart.current = null;\n      window.removeEventListener(\"pointermove\", handleMove);\n      window.removeEventListener(\"pointerup\", handleUp);\n    };\n    window.addEventListener(\"pointermove\", handleMove);\n    window.addEventListener(\"pointerup\", handleUp, { once: true });\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      role=\"dialog\"\n      aria-modal=\"false\"\n      className={className}\n      style={{\n        position: \"fixed\",\n        ...(dragTopLeft ? { top: dragTopLeft.top, left: dragTopLeft.left } : edgeStyle),\n        width,\n        height,\n        minWidth,\n        minHeight,\n        zIndex,\n        background: \"#ffffff\",\n        border: \"1px solid rgba(0,0,0,0.06)\",\n        borderRadius: 12,\n        boxShadow:\n          \"0 10px 30px rgba(0,0,0,0.15), 0 4px 12px rgba(0,0,0,0.08)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        userSelect: dragging ? \"none\" : undefined,\n        ...style,\n      }}\n    >\n      <div\n        className={headerClassName}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: \"10px 12px\",\n          borderBottom: \"1px solid rgba(0,0,0,0.06)\",\n          background: \"#f9fafb\",\n          cursor: draggable ? \"move\" : undefined,\n        }}\n        onPointerDown={handlePointerDown}\n      >\n        <div style={{ fontWeight: 600, color: \"#111827\" }}>{title}</div>\n        <button\n          type=\"button\"\n          onClick={onClose}\n          aria-label={closeButtonAriaLabel}\n          onMouseEnter={() => setIsCloseHovered(true)}\n          onMouseLeave={() => setIsCloseHovered(false)}\n          style={{\n            width: 28,\n            height: 28,\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: 8,\n            border: \"1px solid rgba(0,0,0,0.08)\",\n            background: \"white\",\n            cursor: \"pointer\",\n            color: isCloseHovered ? \"#ef4444\" : undefined,\n            transition: \"color 120ms ease\",\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n          </svg>\n        </button>\n      </div>\n      <div\n        className={bodyClassName}\n        style={{ flex: 1, overflow: \"auto\", background: \"#ffffff\" }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\n\n","import React, { useCallback, useMemo, useRef, useState } from \"react\";\n\ntype UiMessage = {\n  id: string;\n  role: \"user\" | \"assistant\";\n  text?: string;\n  images?: string[]; // data URLs for previews\n};\n\ntype UserContentPart =\n  | { type: \"text\"; text: string }\n  | { type: \"image_url\"; image_url: { url: string } };\n\ntype OpenAIMessage =\n  | { role: \"system\"; content: string }\n  | { role: \"assistant\"; content: string }\n  | { role: \"user\"; content: string | UserContentPart[] };\n\nexport type DefaultChatbotProps = {\n  model?: string; // OpenAI model id with vision support\n  placeholderApiKey?: string; // placeholder key; user will replace\n  systemPrompt?: string;\n  welcome?: string;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nconst OPENAI_API_URL = \"https://api.openai.com/v1/chat/completions\";\n\nasync function fileToDataUrl(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nexport const DefaultChatbot: React.FC<DefaultChatbotProps> = ({\n  model = \"gpt-4o-mini\",\n  placeholderApiKey = \"REPLACE_WITH_YOUR_OPENAI_API_KEY\",\n  systemPrompt = \"You are a helpful assistant.\",\n  welcome = \"Hi! How can I help you today?\",\n  className,\n  style,\n}) => {\n  const [messages, setMessages] = useState<UiMessage[]>([\n    { id: \"welcome\", role: \"assistant\", text: welcome },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [pendingImages, setPendingImages] = useState<string[]>([]);\n  const [isSending, setIsSending] = useState(false);\n  const endRef = useRef<HTMLDivElement | null>(null);\n\n  const scrollToEnd = useCallback(() => {\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, []);\n\n  const handlePickImages = async (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const files = Array.from(e.target.files || []);\n    if (files.length === 0) return;\n    const urls = await Promise.all(files.map(fileToDataUrl));\n    setPendingImages((prev) => [...prev, ...urls]);\n    e.target.value = \"\";\n  };\n\n  const removePendingImage = (idx: number) => {\n    setPendingImages((prev) => prev.filter((_, i) => i !== idx));\n  };\n\n  const buildOpenAIMessages = useCallback(\n    (\n      uiMessages: UiMessage[],\n      nextUser?: { text: string; images: string[] }\n    ): OpenAIMessage[] => {\n      const result: OpenAIMessage[] = [];\n      if (systemPrompt) {\n        result.push({ role: \"system\", content: systemPrompt });\n      }\n      for (const m of uiMessages) {\n        if (m.role === \"assistant\") {\n          result.push({ role: \"assistant\", content: m.text || \"\" });\n        } else {\n          if ((m.images?.length || 0) > 0) {\n            const parts: UserContentPart[] = [\n              { type: \"text\", text: m.text || \"\" },\n              ...m.images!.map<UserContentPart>((url) => ({ type: \"image_url\", image_url: { url } })),\n            ];\n            result.push({ role: \"user\", content: parts });\n          } else {\n            result.push({ role: \"user\", content: m.text || \"\" });\n          }\n        }\n      }\n      if (nextUser) {\n        if (nextUser.images.length > 0) {\n          const parts: UserContentPart[] = [\n            { type: \"text\", text: nextUser.text },\n            ...nextUser.images.map<UserContentPart>((url) => ({ type: \"image_url\", image_url: { url } })),\n          ];\n          result.push({ role: \"user\", content: parts });\n        } else {\n          result.push({ role: \"user\", content: nextUser.text });\n        }\n      }\n      return result;\n    },\n    [systemPrompt]\n  );\n\n  const send = useCallback(async () => {\n    const text = input.trim();\n    if (!text && pendingImages.length === 0) return;\n    const userMsg: UiMessage = {\n      id: String(Date.now()),\n      role: \"user\",\n      text: text || undefined,\n      images: pendingImages.length ? pendingImages : undefined,\n    };\n    setMessages((prev) => [...prev, userMsg]);\n    setInput(\"\");\n    setPendingImages([]);\n    setIsSending(true);\n\n    try {\n      const openaiMessages = buildOpenAIMessages(messages, {\n        text: userMsg.text || \"\",\n        images: userMsg.images || [],\n      });\n\n      const res = await fetch(OPENAI_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${placeholderApiKey}`,\n        },\n        body: JSON.stringify({\n          model,\n          messages: openaiMessages,\n          temperature: 0.7,\n        }),\n      });\n      if (!res.ok) throw new Error(`OpenAI error: ${res.status}`);\n      const data = await res.json();\n      const content = data?.choices?.[0]?.message?.content ?? \"\";\n      const assistant: UiMessage = {\n        id: String(Date.now() + 1),\n        role: \"assistant\",\n        text: typeof content === \"string\" ? content : String(content),\n      };\n      setMessages((prev) => [...prev, assistant]);\n      setTimeout(scrollToEnd, 0);\n    } catch (err: any) {\n      const assistant: UiMessage = {\n        id: String(Date.now() + 1),\n        role: \"assistant\",\n        text: `Error: ${err?.message || \"Failed to contact OpenAI\"}`,\n      };\n      setMessages((prev) => [...prev, assistant]);\n    } finally {\n      setIsSending(false);\n    }\n  }, [buildOpenAIMessages, input, messages, pendingImages, placeholderApiKey, model, scrollToEnd]);\n\n  const canSend = useMemo(() => {\n    return (input.trim().length > 0 || pendingImages.length > 0) && !isSending;\n  }, [input, pendingImages.length, isSending]);\n\n  return (\n    <div className={className} style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\", ...style }}>\n      <div style={{ flex: 1, overflow: \"auto\", padding: 12, background: \"#ffffff\" }}>\n        {messages.map((m) => (\n          <div key={m.id} style={{ marginBottom: 10, display: \"flex\", justifyContent: m.role === \"user\" ? \"flex-end\" : \"flex-start\" }}>\n            <div\n              style={{\n                maxWidth: \"80%\",\n                padding: \"8px 10px\",\n                borderRadius: 10,\n                border: \"1px solid rgba(0,0,0,0.06)\",\n                background: m.role === \"user\" ? \"#111827\" : \"#f3f4f6\",\n                color: m.role === \"user\" ? \"#ffffff\" : \"#111827\",\n                whiteSpace: \"pre-wrap\",\n                wordBreak: \"break-word\",\n              }}\n            >\n              {m.text}\n              {m.images && m.images.length > 0 && (\n                <div style={{ display: \"flex\", gap: 8, marginTop: 8, flexWrap: \"wrap\" }}>\n                  {m.images.map((url, i) => (\n                    <img key={i} src={url} alt=\"upload\" style={{ width: 96, height: 72, objectFit: \"cover\", borderRadius: 8, border: \"1px solid rgba(0,0,0,0.06)\" }} />\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n        <div ref={endRef} />\n      </div>\n      <div style={{ padding: 12, borderTop: \"1px solid rgba(0,0,0,0.06)\", background: \"#fafafa\" }}>\n        <div style={{ display: \"flex\", gap: 8, alignItems: \"center\" }}>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            onChange={handlePickImages}\n            style={{ display: \"none\" }}\n            id=\"ai-hud-chatbot-file\"\n          />\n          <label htmlFor=\"ai-hud-chatbot-file\">\n            <span\n              style={{\n                display: \"inline-flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: 36,\n                height: 36,\n                border: \"1px solid rgba(0,0,0,0.08)\",\n                borderRadius: 8,\n                background: \"white\",\n                cursor: \"pointer\",\n              }}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M18.5 12.5l-5 5-3-3-5 5\" />\n                <path d=\"M20 7a4 4 0 0 0-8 0v10a4 4 0 0 0 8 0Z\" />\n              </svg>\n            </span>\n          </label>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                if (canSend) void send();\n              }\n            }}\n            style={{\n              flex: 1,\n              height: 36,\n              border: \"1px solid rgba(0,0,0,0.15)\",\n              borderRadius: 8,\n              padding: \"0 10px\",\n            }}\n          />\n          <button\n            type=\"button\"\n            disabled={!canSend}\n            onClick={() => void send()}\n            style={{\n              height: 36,\n              padding: \"0 12px\",\n              borderRadius: 8,\n              border: \"1px solid rgba(0,0,0,0.08)\",\n              background: canSend ? \"#111827\" : \"#e5e7eb\",\n              color: canSend ? \"#ffffff\" : \"#9ca3af\",\n              cursor: canSend ? \"pointer\" : \"not-allowed\",\n            }}\n          >\n            Send\n          </button>\n        </div>\n        {pendingImages.length > 0 && (\n          <div style={{ display: \"flex\", gap: 8, marginTop: 8, flexWrap: \"wrap\" }}>\n            {pendingImages.map((url, i) => (\n              <div key={i} style={{ position: \"relative\" }}>\n                <img src={url} alt=\"selected\" style={{ width: 64, height: 48, objectFit: \"cover\", borderRadius: 6, border: \"1px solid rgba(0,0,0,0.06)\" }} />\n                <button\n                  type=\"button\"\n                  onClick={() => removePendingImage(i)}\n                  aria-label=\"Remove image\"\n                  style={{\n                    position: \"absolute\",\n                    top: -6,\n                    right: -6,\n                    width: 20,\n                    height: 20,\n                    borderRadius: 9999,\n                    border: \"1px solid rgba(0,0,0,0.08)\",\n                    background: \"white\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\n"],"mappings":"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","names":["React","useMemo","useState","useEffect","useRef","useState","jsx","jsxs","FloatingWindow","children","title","onClose","position","width","height","minWidth","minHeight","offset","zIndex","className","style","headerClassName","bodyClassName","closeButtonAriaLabel","closeOnEscape","draggable","isCloseHovered","setIsCloseHovered","containerRef","dragging","setDragging","dragStart","dragTopLeft","setDragTopLeft","handleKeyDown","e","edgeStyle","o","handlePointerDown","el","rect","handleMove","ev","dx","dy","handleUp","useCallback","useMemo","useRef","useState","jsx","jsxs","OPENAI_API_URL","fileToDataUrl","file","resolve","reject","reader","DefaultChatbot","model","placeholderApiKey","systemPrompt","welcome","className","style","messages","setMessages","input","setInput","pendingImages","setPendingImages","isSending","setIsSending","endRef","scrollToEnd","handlePickImages","e","files","urls","prev","removePendingImage","idx","_","i","buildOpenAIMessages","uiMessages","nextUser","result","m","parts","url","send","text","userMsg","openaiMessages","res","content","assistant","err","canSend","jsx","jsxs","ChatEnabled","React","children","onClick","label","position","offset","icon","className","containerStyle","buttonClassName","buttonStyle","buttonSize","zIndex","disabled","trigger","open","onOpenChange","renderButton","openWindowOnClick","windowProps","windowContent","ref","isHoveredOrFocused","setIsHoveredOrFocused","useState","isWindowOpen","setIsWindowOpen","resolvedTrigger","positionStyle","useMemo","base","offsetPx","computedVisible","notifyOpenChange","next","containerEventHandlers","buttonProps","e","FloatingWindow","DefaultChatbot"]}