{"version":3,"sources":["../src/react/ChatEnabled.tsx","../src/react/FloatingWindow.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { FloatingWindow, FloatingWindowProps } from \"./FloatingWindow\";\n\nexport type ChatEnabledTrigger = \"hover\" | \"focus\" | \"always\" | \"manual\";\n\nexport type ChatEnabledProps = {\n  children: React.ReactNode;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  label?: string;\n  position?: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\n  offset?: number;\n  icon?: React.ReactNode;\n  className?: string; // container className\n  containerStyle?: React.CSSProperties;\n  buttonClassName?: string;\n  buttonStyle?: React.CSSProperties;\n  buttonSize?: number; // px, default 36\n  zIndex?: number; // default 10\n  disabled?: boolean;\n  trigger?: ChatEnabledTrigger; // default 'hover'\n  open?: boolean; // used when trigger is 'manual'\n  onOpenChange?: (open: boolean) => void; // notifies visibility changes\n  renderButton?: (\n    props: React.ButtonHTMLAttributes<HTMLButtonElement> & {\n      visible: boolean;\n      ref: React.Ref<HTMLButtonElement>;\n    }\n  ) => React.ReactNode;\n  // Optional built-in floating window support\n  openWindowOnClick?: boolean; // default false\n  windowProps?: Omit<FloatingWindowProps, \"children\">;\n  windowContent?: React.ReactNode; // custom content; if absent, shows nothing\n};\n\nexport const ChatEnabled = React.forwardRef<HTMLButtonElement, ChatEnabledProps>(\n  (\n    {\n      children,\n      onClick,\n      label = \"Open chat\",\n      position = \"top-right\",\n      offset = 8,\n      icon,\n      className,\n      containerStyle,\n      buttonClassName,\n      buttonStyle,\n      buttonSize = 36,\n      zIndex = 10,\n      disabled = false,\n      trigger,\n      open,\n      onOpenChange,\n      renderButton,\n      openWindowOnClick = false,\n      windowProps,\n      windowContent,\n    },\n    ref\n  ) => {\n    const [isHoveredOrFocused, setIsHoveredOrFocused] = useState(false);\n    const [isWindowOpen, setIsWindowOpen] = useState(false);\n\n    const resolvedTrigger: ChatEnabledTrigger = trigger ?? \"hover\";\n\n    const positionStyle = useMemo<React.CSSProperties>(() => {\n      const base: React.CSSProperties = { position: \"absolute\" };\n      const offsetPx = `${offset}px`;\n      switch (position) {\n        case \"top-left\":\n          return { ...base, top: offsetPx, left: offsetPx };\n        case \"top-right\":\n          return { ...base, top: offsetPx, right: offsetPx };\n        case \"bottom-left\":\n          return { ...base, bottom: offsetPx, left: offsetPx };\n        case \"bottom-right\":\n        default:\n          return { ...base, bottom: offsetPx, right: offsetPx };\n      }\n    }, [position, offset]);\n\n    const computedVisible = (() => {\n      if (resolvedTrigger === \"always\") return true;\n      if (resolvedTrigger === \"manual\") return Boolean(open);\n      // hover or focus: we use the same internal state\n      return isHoveredOrFocused;\n    })();\n\n    const notifyOpenChange = (next: boolean) => {\n      if (onOpenChange) onOpenChange(next);\n    };\n\n    const containerEventHandlers = {\n      onMouseEnter: resolvedTrigger === \"hover\" ? () => { setIsHoveredOrFocused(true); notifyOpenChange(true); } : undefined,\n      onMouseLeave: resolvedTrigger === \"hover\" ? () => { setIsHoveredOrFocused(false); notifyOpenChange(false); } : undefined,\n      onFocus: resolvedTrigger === \"focus\" ? () => { setIsHoveredOrFocused(true); notifyOpenChange(true); } : undefined,\n      onBlur: resolvedTrigger === \"focus\" ? () => { setIsHoveredOrFocused(false); notifyOpenChange(false); } : undefined,\n    } as const;\n\n    const buttonProps: React.ButtonHTMLAttributes<HTMLButtonElement> & { ref: typeof ref; visible: boolean } = {\n      type: \"button\",\n      \"aria-label\": label,\n      onClick: (e) => {\n        onClick?.(e);\n        if (!disabled && openWindowOnClick) setIsWindowOpen(true);\n      },\n      className: buttonClassName,\n      disabled,\n      style: {\n        ...positionStyle,\n        zIndex,\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: 9999,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"1px solid rgba(0,0,0,0.08)\",\n        background: disabled ? \"#f3f4f6\" : \"white\",\n        color: disabled ? \"#9ca3af\" : undefined,\n        boxShadow:\n          \"0 2px 6px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.06)\",\n        cursor: disabled ? \"not-allowed\" : \"pointer\",\n        transition: \"opacity 120ms ease, transform 120ms ease\",\n        opacity: computedVisible ? 1 : 0,\n        transform: computedVisible ? \"scale(1)\" : \"scale(0.95)\",\n        pointerEvents: computedVisible ? \"auto\" : \"none\",\n        ...buttonStyle,\n      },\n      tabIndex: computedVisible ? 0 : -1,\n      \"aria-hidden\": computedVisible ? undefined : true,\n      ref,\n      visible: computedVisible,\n    };\n\n    return (\n      <div\n        className={className}\n        style={{ position: \"relative\", display: \"inline-block\", ...containerStyle }}\n        {...containerEventHandlers}\n      >\n        {children}\n        {renderButton ? (\n          renderButton(buttonProps)\n        ) : (\n          <button {...buttonProps}>\n            {icon ?? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={Math.max(12, Math.floor(buttonSize * 0.5))}\n                height={Math.max(12, Math.floor(buttonSize * 0.5))}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M21 15a4 4 0 0 1-4 4H7l-4 4V7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4z\" />\n              </svg>\n            )}\n          </button>\n        )}\n        {openWindowOnClick && isWindowOpen && (\n          <FloatingWindow\n            {...(windowProps as FloatingWindowProps)}\n            onClose={() => {\n              windowProps?.onClose?.();\n              setIsWindowOpen(false);\n            }}\n          >\n            {windowContent}\n          </FloatingWindow>\n        )}\n      </div>\n    );\n  }\n);\n\nChatEnabled.displayName = \"ChatEnabled\";\n\n// For convenience, also export a lower-cased alias for named import\n// Note: in JSX you must still use <ChatEnabled />, not <chatEnabled />\nexport const chatEnabled = ChatEnabled;\n\n\n","import React, { useEffect, useState } from \"react\";\n\nexport type FloatingWindowCorner = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\n\nexport type FloatingWindowProps = {\n  children: React.ReactNode;\n  title?: React.ReactNode;\n  onClose?: () => void;\n  position?: FloatingWindowCorner;\n  width?: number; // px\n  height?: number; // px\n  minWidth?: number;\n  minHeight?: number;\n  offset?: number; // px from edges\n  zIndex?: number;\n  className?: string;\n  style?: React.CSSProperties;\n  headerClassName?: string;\n  bodyClassName?: string;\n  closeButtonAriaLabel?: string;\n  closeOnEscape?: boolean;\n};\n\nexport const FloatingWindow: React.FC<FloatingWindowProps> = ({\n  children,\n  title,\n  onClose,\n  position = \"bottom-right\",\n  width = 360,\n  height = 480,\n  minWidth = 280,\n  minHeight = 240,\n  offset = 16,\n  zIndex = 1000,\n  className,\n  style,\n  headerClassName,\n  bodyClassName,\n  closeButtonAriaLabel = \"Close\",\n  closeOnEscape = true,\n}) => {\n  const [isCloseHovered, setIsCloseHovered] = useState(false);\n  useEffect(() => {\n    if (!closeOnEscape) return;\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        onClose?.();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [closeOnEscape, onClose]);\n\n  const edgeStyle: React.CSSProperties = (() => {\n    const o = `${offset}px`;\n    switch (position) {\n      case \"top-left\":\n        return { top: o, left: o };\n      case \"top-right\":\n        return { top: o, right: o };\n      case \"bottom-left\":\n        return { bottom: o, left: o };\n      case \"bottom-right\":\n      default:\n        return { bottom: o, right: o };\n    }\n  })();\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-modal=\"false\"\n      className={className}\n      style={{\n        position: \"fixed\",\n        ...edgeStyle,\n        width,\n        height,\n        minWidth,\n        minHeight,\n        zIndex,\n        background: \"#ffffff\",\n        border: \"1px solid rgba(0,0,0,0.06)\",\n        borderRadius: 12,\n        boxShadow:\n          \"0 10px 30px rgba(0,0,0,0.15), 0 4px 12px rgba(0,0,0,0.08)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        ...style,\n      }}\n    >\n      <div\n        className={headerClassName}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: \"10px 12px\",\n          borderBottom: \"1px solid rgba(0,0,0,0.06)\",\n          background: \"#f9fafb\",\n        }}\n      >\n        <div style={{ fontWeight: 600, color: \"#111827\" }}>{title}</div>\n        <button\n          type=\"button\"\n          onClick={onClose}\n          aria-label={closeButtonAriaLabel}\n          onMouseEnter={() => setIsCloseHovered(true)}\n          onMouseLeave={() => setIsCloseHovered(false)}\n          style={{\n            width: 28,\n            height: 28,\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: 8,\n            border: \"1px solid rgba(0,0,0,0.08)\",\n            background: \"white\",\n            cursor: \"pointer\",\n            color: isCloseHovered ? \"#ef4444\" : undefined,\n            transition: \"color 120ms ease\",\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n          </svg>\n        </button>\n      </div>\n      <div\n        className={bodyClassName}\n        style={{ flex: 1, overflow: \"auto\", background: \"#ffffff\" }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\n\n"],"mappings":"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","names":["React","useMemo","useState","useEffect","useState","jsx","jsxs","FloatingWindow","children","title","onClose","position","width","height","minWidth","minHeight","offset","zIndex","className","style","headerClassName","bodyClassName","closeButtonAriaLabel","closeOnEscape","isCloseHovered","setIsCloseHovered","handleKeyDown","e","edgeStyle","o","jsx","jsxs","ChatEnabled","React","children","onClick","label","position","offset","icon","className","containerStyle","buttonClassName","buttonStyle","buttonSize","zIndex","disabled","trigger","open","onOpenChange","renderButton","openWindowOnClick","windowProps","windowContent","ref","isHoveredOrFocused","setIsHoveredOrFocused","useState","isWindowOpen","setIsWindowOpen","resolvedTrigger","positionStyle","useMemo","base","offsetPx","computedVisible","notifyOpenChange","next","containerEventHandlers","buttonProps","e","FloatingWindow"]}